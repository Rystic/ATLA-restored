#avatar basic death, revelation, and rebirth events

namespace = ATLA

#avatar_fire: fire_nation, republic_city, air_acolytes and colonial if the parent is a firebender
#avatar_air: northern_air_nomad, eastern_air_nomad, western_air_nomad, southern_air_nomad, new_air_nation, but air_acolytes if a parent is an airbender
#avatar_water: northern_water, southern_water and republic and air_acolytes if a parent is a waterbender
#avatar_earth: northern_earth, ba_sing_se, southern_earth, sandbender, earth_islander, republic_city, air_acolytes and colonial if parent is earthbender
###
#list of events in this dumpsterfire by TypicalCrusader
#1 - avatar killed
#2 - create the new avatar #on_birth is recycled (Air)
#3 - The avatar is dead and the search begins
#4 - avatar revealed
#5 - News event - Avatar Revealed
#6 - create the new avatar #on_birth is recycled (Water (does not include swampy boiz :C ))
#7 - create the new avatar #on_birth is recycled (Earth)
#8 - create the new avatar #on_birth is recycled (fire)
#9 - ensures the avatar's descendents get the appropriate descendent trait
#10 - NOTHING
#11,20,25 - Avatar Search Sozin/Amibition/Zuko/White lotus ???
#12 - 19, 21 - 24 - NOTHING
#26 - Move Avatar cycle by one element if Avatar died without beeing revieled
#27 - Avatar Search failed - Avatar Revealed by another person
#28 - 29 - NOTHING
#30 - triggers on avatars untimely death
#31 - Avatar resists Imprisonment - ROOT
#32 - Avatar resists Imprisonment - Avatar
#33 - Generate Benders
#34 - Something about Avatar confronting someone unfinished by original devs
#35 - 99 - NOTHING
#100 - Gib minor title to avatar
#101 - Avatar Event handler
#102 - Turn Bender RD trait to normal trait
#103 - Assign EK tributes
#104 - FROM asked to convert to ROOT religion
#105 - Inherit Succession (Air)
#106 - Check Ambition Status ( see realm growth )
#107 - Avatar reborn - Air 
#108 - Avatar reborn - Water 
#109 - Avatar reborn - Earth
#110 - Avatar reborn - Fire
#111 - 11099 - NOTHING
#11100 - 11102 - Various EK handlers
###

character_event = { #avatar killed
	id = ATLA.1
	desc = "EVTDESCATLA.1"
	picture = "GFX_evt_avatar_death"
	is_triggered_only = yes

	trigger = {
		OR = {
			trait = avatar
			trait = fullyrealisedavatar
			has_character_flag = avatar_revealed
		}
	}

	immediate = {
		death = { death_reason = death_natural }
		clr_character_flag = avatar_revealed
		set_global_flag = avatar_dead
		clr_global_flag = avatar_revealed
		activate_title = { title = d_avatar status = no }
	}

	option = {
		name = "EVTOPTAATLA.1"
		narrative_event = { id = ATLA.3 }
	}

}

character_event = { #create the new avatar #on_birth is recycled
	id = ATLA.2
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		NOT = { has_global_flag = HYW_16 }
		has_global_flag = avatar_dead
		has_global_flag = avatar_fire
		ROOT = {
			OR = {
				culture_group = air_nomad_culture
				father_even_if_dead = {
					trait = airbender
				}
				mother_even_if_dead = {
					trait = airbender
				}
			}
			# OR = {
				# AND = {
					# has_game_rule = {
						# name = canon_events
						# value = strict_canon
					# }
					# is_female = no
				# }
				# NOT = {
					# has_game_rule = {
						# name = canon_events
						# value = strict_canon
					# }
				# }
			# }
		}
	}
	immediate = {
		clr_global_flag = avatar_dead
		clr_global_flag = avatar_fire
		ROOT = { set_character_flag = avatar_unrevealed }
		set_global_flag = avatar_air
		set_global_flag = avatar_unrevealed
	}
	option = {
		any_playable_ruler = {
			character_event = { id = ATLA.107 }
		}
		if = {
			limit = {
				NOT = { has_global_flag = Aang }
				is_female = no
			}
			set_name = "Aang"
			set_graphical_culture = customPortrait_aang #aanggfx
			set_global_flag = Aang
			add_trait = canon_character
			set_character_flag = is_aang
		}
		if = {
			limit = {
				NOT = { has_global_flag = Malu }
				is_female = yes
			}
			set_name = "Malu"
			set_global_flag = Malu
			set_character_flag = is_malu
		}
	}
}

narrative_event = { #The avatar is dead and the search begins
	id = ATLA.3
	desc = "EVTDESCATLA.3"
	title = "EVTTITLEATLA.3"
	is_triggered_only = yes
	picture = GFX_evt_avatar_death
	major = yes

	option = {
		name = "EVTOPTAATLA.3"
	}
}

character_event = { #avatar revealed
	id = ATLA.4
	desc = "EVTDESCATLA.4"
	is_triggered_only = yes
	picture = GFX_evt_avatar_conflict
	min_age = 16

	trigger = {
		has_character_flag = avatar_unrevealed
	}
	option = {
		name = "EVTOPTAATLA.4"
		add_trait = avatar
		give_minor_title = title_avatar
		set_character_flag = avatar_revealed
		clr_character_flag = avatar_unrevealed
		clr_global_flag = avatar_unrevealed
		set_global_flag = avatar_revealed
		narrative_event = { id = ATLA.5 }
		character_event = { id = avatar.170 days = 30 random = 90 }
		hidden_tooltip = {
			any_independent_ruler = {
				any_realm_character = {
					if = {
						limit = {
							has_character_flag = avatar_hunt
						}
						clr_character_flag = avatar_hunt
						character_event = { id = ATLA.27 }
					}
				}
			}
		}
	}
}

#News event - Avatar Revealed
narrative_event = {
	id = ATLA.5
	desc = "EVTDESCATLA.5"
	title = "EVTTITLEATLA.5"
	is_triggered_only = yes
	picture = GFX_evt_avatar_conflict
	major = yes

	option = {
		name = "EVTOPTAATLA.5"
	}
}

character_event = { #create the new avatar #on_birth is recycled
	id = ATLA.6
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		NOT = { has_global_flag = HYW_16 }
		has_global_flag = avatar_dead
		has_global_flag = avatar_air
		ROOT = {
			OR = {
				culture = northern_water
				culture = southern_water
				father_even_if_dead = {
					trait = waterbender
				}
				mother_even_if_dead = {
					trait = waterbender
				}
			}
			# OR = {
				# AND = {
					# has_game_rule = {
						# name = canon_events
						# value = strict_canon
					# }
					# is_female = yes
				# }
				# NOT = {
					# has_game_rule = {
						# name = canon_events
						# value = strict_canon
					# }
				# }
			# }
		}
	}
	immediate = {
		clr_global_flag = avatar_dead
		clr_global_flag = avatar_air
		set_character_flag = avatar_unrevealed
		set_global_flag = avatar_water
		set_global_flag = avatar_unrevealed
	}
	option = {
		any_playable_ruler = {
			character_event = { id = ATLA.108 }
		}
		if = {
			limit = {
				NOT = { has_global_flag = Korra }
				is_female = yes
			}
			set_name = "Korra"
			set_global_flag = Korra
			add_trait = canon_character
			set_character_flag = is_korra
		}
	}
}

character_event = { #create the new avatar #on_birth is recycled
	id = ATLA.7
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		NOT = { has_global_flag = HYW_16 }
		has_global_flag = avatar_dead
		has_global_flag = avatar_water
		ROOT = {
			OR = {
				culture_group = earth_kingdom_culture
				father_even_if_dead = {
					trait = earthbender
				}
				mother_even_if_dead = {
					trait = earthbender
				}
			}
		}
	}
	immediate = {
		clr_global_flag = avatar_dead
		clr_global_flag = avatar_water
		set_character_flag = avatar_unrevealed
		set_global_flag = avatar_earth
		set_global_flag = avatar_unrevealed
	}
	option = {
		any_playable_ruler = {
			character_event = { id = ATLA.109 }
		}
	}
}

character_event = { #create the new avatar #on_birth is recycled
	id = ATLA.8
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		NOT = { has_global_flag = HYW_16 }
		has_global_flag = avatar_dead
		has_global_flag = avatar_earth
		ROOT = {
			OR = {
				culture_group = fire_nation_culture
				father_even_if_dead = {
					trait = firebender
				}
				mother_even_if_dead = {
					trait = firebender
				}
			}
			# OR = {
				# AND = {
					# has_game_rule = {
						# name = canon_events
						# value = strict_canon
					# }
					# is_female = no
				# }
				# NOT = {
					# has_game_rule = {
						# name = canon_events
						# value = strict_canon
					# }
				# }
			# }
		}
	}
	immediate = {
		clr_global_flag = avatar_dead
		clr_global_flag = avatar_earth
		set_character_flag = avatar_unrevealed
		set_global_flag = avatar_fire
		set_global_flag = avatar_unrevealed
	}
	option = {
		any_playable_ruler = {
			character_event = { id = ATLA.110 }
		}
		if = {
			limit = {
				NOT = { has_global_flag = Roku }
				is_female = no
			}
			set_name = "Roku"
			set_global_flag = Roku
			add_trait = canon_character
			set_character_flag = is_roku
		}
	}
}


character_event = { #ensures the avatar's descendents get the appropriate descendent trait
	id = ATLA.9
	hide_window = yes
	is_triggered_only = yes

	trigger = {
		OR = {
			mother = { trait = avatar }
			father = { trait = avatar }
			mother = { trait = fullyrealisedavatar }
			father = { trait = fullyrealisedavatar }
			mother = { trait = directdescendantavatar }
			father = { trait = directdescendantavatar }
		}
		NOT = {
			OR = {
				trait = directdescendantavatar
				trait = descendantavatar
			}
		}
	}

	immediate = {
		if = {
			limit = {
				OR = {
					mother = { trait = avatar }
					father = { trait = avatar }
					mother = { trait = fullyrealisedavatar }
					father = { trait = fullyrealisedavatar }
				}
			}
			add_trait = directdescendantavatar
		}
		if = {
			limit = {
				OR = {
					mother = { trait = directdescendantavatar }
					father = { trait = directdescendantavatar }
				}
			}
			add_trait = descendantavatar
		}
	}
	option = {
		name = OK
	}
}

# Build out by RadSquirrel based on 000_atla.csv localization, needs improvement
# Associated Events 20,25
# Missing events in chain, 10, 12, 13, 14, 15, 16
character_event = { # Previously missing event for searching the avatar!
	id = ATLA.11
	desc = EVTDESCATLA.11
	is_triggered_only = yes
	option = {
		name = EVTOPTAATLA.11
	}
	option = {
		name = EVTOPTBATLA.11
	}
	option = {
		name = EVTOPTCATLA.11
	}
	option = {
		name = EVTOPTDATLA.11
	}
}

#Never caled probably for zuko or Sozin/ambition??? - TypicalCrusader
character_event = {
	id = ATLA.20
	desc = EVTDESCATLA.20
	picture = GFX_evt_cliff_face
	is_triggered_only = yes

	option = { #the search begins again
		name = EVTOPTAATLA.20
		random = {
			chance = 20
			add_trait = diligent
		}
		scaled_wealth = -0.33
		hidden_tooltip = {
			random_list = {
				2 = {
					modifier = {
						factor = 5
						trait = diligent
					}
					character_event = { id = ATLA.11 days = 180 }
				}
				1 = {
					modifier = {
						factor = 10
						trait = content
					}
					character_event = { id = ATLA.20 days = 200 }
				}
			}
		}
	}
	option = { #the search is ended
		name = EVTOPTBATLA.20
		prestige = -50
		hidden_tooltip = {
			clr_character_flag = avatar_hunt
#			remove_trait = on_pilgrimage
		}
	}
}

#Never caled probably for zuko or Sozin???/ambition - TypicalCrusader
character_event = {
	id = ATLA.25
	desc = EVTDESCATLA.25
	picture = GFX_evt_cliff_face
	is_triggered_only = yes

	option = {
		name = EVTOPTAATLA.25
		trigger = {
			wealth = 25
		}
		wealth = -25
		hidden_tooltip = {
			character_event = { id = ATLA.11 days = 90 }
		}
	}
	option = {
		name = EVTOPTBATLA.25
		hidden_tooltip = {
			clr_character_flag = avatar_hunt
#			remove_trait = on_pilgrimage
		}
	}
}

character_event = {
	id = ATLA.26
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		has_character_flag = avatar_unrevealed
	}
	immediate = {
		clr_character_flag = avatar_unrevealed
		set_global_flag = avatar_dead
	}
	option = {
		if = {
			limit = {
				has_global_flag = avatar_fire
			}
			clr_global_flag = avatar_fire
			set_global_flag = avatar_air
		}
		if = {
			limit = {
				has_global_flag = avatar_air
			}
			clr_global_flag = avatar_air
			set_global_flag = avatar_water
		}
		if = {
			limit = {
				has_global_flag = avatar_water
			}
			clr_global_flag = avatar_water
			set_global_flag = avatar_earth
		}
		if = {
			limit = {
				has_global_flag = avatar_earth
			}
			clr_global_flag = avatar_earth
			set_global_flag = avatar_fire
		}
	}
}

character_event = {
	id = ATLA.27
	desc = EVTDESCATLA.27
	is_triggered_only = yes
	picture = GFX_evt_cliff_face

	option = {
		name = EVTOPTAATLA.27
		prestige = -50
	}
}

character_event = { #triggers on avatars untimely death
	id = ATLA.30
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		OR = {
			trait = avatar
			trait = fullyrealisedavatar
			has_character_flag = avatar_revealed
			has_character_flag = avatar_unrevealed
		}
	}

	immediate = {
		set_global_flag = avatar_dead

		d_avatar = {
			unsafe_destroy_landed_title = d_avatar #yes
		}
		create_character = {
			dynasty = random
			culture = ba_sing_se
			religion = earth_spirituality
			age = 21
		}
		new_character = {
			d_the_sages = {
				grant_title = PREV
			}
		}

		if = {
			limit = {
				has_game_rule = {
					name = avatar_system
					value = new
				}
			}

			create_new_avatar_effect = yes
		}
	}

	option = {
		if = {
			limit = {
				has_character_flag = avatar_revealed
			}
			narrative_event = { id = ATLA.3 }
		}
		
		clr_character_flag = avatar_revealed
		clr_global_flag = avatar_revealed
	}
}

character_event = { #Avatar resists Imprisonment - ROOT
	id = ATLA.31
	desc = EVTDESCATLA.31
	is_triggered_only = yes
	picture = GFX_evt_avatar_resist

	trigger = {
		OR = {
			trait = avatar
			trait = fullyrealisedavatar
			has_character_flag = avatar_revealed
		}
	}
	option = {
		name = EVTOPTATLA.31
		prisoner = no
		banish = yes
		FROM = {
			character_event = { id = ATLA.32 }
		}
	}
}

character_event = { #Avatar resists Imprisonment - FROM
	id = ATLA.32
	desc = "EVTDESCATLA.32"
	is_triggered_only = yes
	picture = GFX_evt_avatar_resist

	option = {
		name = EVTOPTATLA.32
		prestige = -500
		add_trait = wounded
	}
}

character_event = { #Generate Benders
	id = ATLA.33
	is_triggered_only = yes
	hide_window = yes
	ai = yes
	only_playable = yes

	option = {
		if = {
			limit = {
				culture_group = water_tribe_culture
			}
			random_list = {
				50 = {
					create_character = {
						random_traits = yes
						dynasty = random
						religion = ROOT
						culture = ROOT
						trait = waterbender
						trait = competent_bender
					}
				}
				50 = {
					create_character = {
						random_traits = yes
						dynasty = random
						religion = ROOT
						culture = ROOT
						female = yes
						trait = waterbender
						trait = competent_bender
					}
				}
			}
		}
		if = {
			limit = {
				culture_group = earth_kingdom_culture
			}
			random_list = {
				50 = {
					create_character = {
						random_traits = yes
						dynasty = random
						religion = ROOT
						culture = ROOT
						trait = earthbender
						trait = competent_bender
					}
				}
				50 = {
					create_character = {
						random_traits = yes
						dynasty = random
						religion = ROOT
						culture = ROOT
						female = yes
						trait = earthbender
						trait = competent_bender
					}
				}
			}
		}
		if = {
			limit = {
				culture_group = fire_nation_culture
			}
			if = {
				limit = {
					is_ruler = yes
					is_feudal = yes
					has_law = succ_gavelkind
				}
				any_demesne_title = {
					add_law = { law = succ_primogeniture cooldown = no opinion_effect = no }
					add_law = { law = true_cognatic_succession cooldown = no opinion_effect = no }
				}
			}
			random_list = {
				50 = {
					create_character = {
						random_traits = yes
						dynasty = random
						religion = ROOT
						culture = ROOT
						trait = firebender
						trait = competent_bender
					}
				}
				50 = {
					create_character = {
						random_traits = yes
						dynasty = random
						religion = ROOT
						culture = ROOT
						female = yes
						trait = firebender
						trait = competent_bender
					}
				}
			}
		}
	}
}

#Something abaout avatar confronting something??? - TypicalCrusader
#character_event = {
#	id = ATLA.34
#	desc = "EVTDESCATLA.34"
#	picture = GFX_evt_cliff_face
#	is_triggered_only = yes
#	hide_window = no
#	min_age = 16
#
#	trigger = {
#		trait = fullyrealisedavatar
#		NOT = { has_character_flag = avatar_busy }
#	}
#
#	option = { # Confront Agressor
#		name = EVTOPTATLA.32
#		set_character_flag = avatar_busy
#	}
#
#	option = { # Fight Aggressors
#		name = EVTOPTATLA.32
#		set_character_flag = avatar_busy
#	}
#
#	option = { # Travel
#		name = EVTOPTATLA.32
#		set_character_flag = avatar_busy
#	}
#}

character_event = {
	id = ATLA.100
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		OR = {
			trait = avatar
			trait = fullyrealisedavatar
		}
		NOT = { has_minor_title = title_avatar }
	}
	option = {
		give_minor_title = title_avatar
	}
}

character_event = { # Avatar Event Handler
	id = ATLA.101
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		OR = {
			trait = avatar
			trait = fullyrealisedavatar
			has_character_flag = avatar_unrevealed
		}
	}

	immediate = {

		if = { # START: Gain First Bending Trait
			limit = {
				has_character_flag = avatar_unrevealed
				age = 6
				NOT = {
					trait = firebender
					trait = earthbender
					trait = waterbender
					trait = airbender
				}
			}
			if = {
				limit = {
					has_global_flag = avatar_fire
				}
				character_event = { id = bending.1 days = 10 random = 30 }
				break = yes
			}
			if = {
				limit = {
					has_global_flag = avatar_air
				}
				character_event = { id = bending.94 days = 10 random = 30 }
				break = yes
			}
			if = {
				limit = {
					has_global_flag = avatar_water
				}
				character_event = { id = bending.31 days = 10 random = 30 }
				break = yes
			}
			if = {
				limit = {
					has_global_flag = avatar_earth
				}
				character_event = { id = bending.61 days = 10 random = 30 }
				break = yes
			}
		} # END: Gain First Bending Trait

		if = { # START: Master Native Element
			limit = {
				has_character_flag = avatar_unrevealed
				age = 9
				NOT = { age = 16 }
				OR = {
					trait = incompetent_bender
					trait = competent_bender
				}
			}
			character_event = { id = bending.160 days = 10 random = 30 }
			educator = { # Inform Educator
				character_event = { id = avatar.202 days = 40 random = 60 }
			}
			break = yes
		} # END: Master Native Element

		if = { # START: Avatar Revealed
			limit = {
				has_character_flag = avatar_unrevealed
				NOT = { has_character_flag = avatar_training }
				age = 16
			}
			character_event = { id = ATLA.4 days = 10 random = 30 }
			break = yes
		} # END: Master Native Element

		if = { # START: Master the Four Elements
			limit = {
				has_character_flag = avatar_revealed
				NOT = { trait = fullyrealisedavatar }
				NOT = { has_character_flag = avatar_journey }
			}
			character_event = { id = avatar.151 }
			break = yes
		} # END: Master the Four Elements

		if = { # Heal the Avatar if nessecary
			limit = {
				OR = {
					trait = fullyrealisedavatar
					trait = avatar
				}
				OR = {
					trait = possessed
					trait = ill
					trait = wounded
					trait = maimed
					trait = infirm
					trait = incapable
				}
			}
			remove_trait = possessed
			remove_trait = ill
			remove_trait = wounded
			remove_trait = maimed
			remove_trait = infirm
			remove_trait = incapable
		}

		if = { # START: Avatar Personal Events
			limit = {
				trait = fullyrealisedavatar
			}
			random_list = {
				50 = { } # No Event
			}
			if = {
				limit = {
					has_landed_title = d_avatar
					ROOT = {
						any_child = {
							de_facto_liege = ROOT
							age = 18
						}
					}
				}
				random_list = {
					100 = {
						# Stays
					}
					# 25 = { # Leaves (event is commented out, hence commented this out)
						# ROOT = {
							# random_child = {
								# limit = {
									# de_facto_liege = ROOT
									# age = 18
								# }
								# character_event = { id = avatar.191 }
							# }
						# }
					# }
					# 50 = { # Leaves and marries (should be 25 once above is re-added) (event is not existant)
						# ROOT = {
							# random_child = {
								# limit = {
									# de_facto_liege = ROOT
									# age = 18
								# }
								# character_event = { id = avatar.190 }
							# }
						# }
					# }
				}
			}
		}

		if = { # START: Avatar Joins War
			limit = {
				NOT = { has_global_flag = avatar_at_war }
				trait = fullyrealisedavatar
				has_global_flag = HYW_0
			}
			character_event = { id = avatar.184 }
			break = yes
		}

		if = { # START: Avatar takes action
			limit = {
				has_global_flag = avatar_at_war
				NOT = { has_global_flag = avatar_busy }
				trait = fullyrealisedavatar
				has_global_flag = HYW_0
			}
			character_event = { id = avatar.186 }
			if = {
				limit = {
					war = no
				}
				character_event = { id = avatar.199 }
			}
			break = yes
		}

		if = { # START: Death (Old Age)
			limit = {
				age = 100
			}
			random_list = {
				1 = {
					modifier = {
						factor = 1.5
						trait = wounded
					}
					modifier = {
						factor = 1.5
						trait = maimed
					}
					modifier = {
						factor = 1.9
						trait = stressed
					}
					modifier = {
						factor = 0.8
						trait = strong
					}
					modifier = {
						factor = 2.5
						age = 175
					}
					modifier = {
						factor = 5
						age = 200
					}
					modifier = {
						factor = 10
						age = 225
					}
					modifier = {
						factor = 50
						age = 250
					}
					modifier = {
						factor = 75
						trait = incapable
					}
					character_event = { id = ATLA.1 days = 10 random = 30 }
					break = yes
				}
				99 = {
					break = yes
				}
			}
		} # END: Death (Old Age)

	}

}

character_event = {
	id = ATLA.102
	is_triggered_only = yes
	hide_window = yes
	ai = no

	trigger = {
		OR = {
			trait = waterbender_novice
			trait = waterbender_trained
			trait = waterbender_powerful
			trait = waterbender_master
			trait = waterbender_legendary
			trait = firebender_novice
			trait = firebender_trained
			trait = firebender_powerful
			trait = firebender_master
			trait = firebender_legendary
			trait = earthbender_novice
			trait = earthbender_trained
			trait = earthbender_powerful
			trait = earthbender_master
			trait = earthbender_legendary
			trait = airbender_novice
			trait = airbender_trained
			trait = airbender_powerful
			trait = airbender_master
			trait = airbender_legendary
		}
		OR = {
			trait = blueflames_rd
			trait = innerflame_rd 
			trait = levitation_rd
			trait = voidbender_rd 
			trait = lavabender_rd
			trait = sandbender_rd
			trait = metalbender_rd
			trait = seismicsense_rd
			trait = bloodbender_rd
			trait = healer_rd
			trait = lightningbender_rd
			trait = smokebender_rd
			trait = combustionbender_rd
		}
	}
	option = {
	
		trigger_switch = {
		on_trigger = trait	
			waterbender_novice = {
				remove_trait = waterbender_novice
				add_trait = waterbender
				add_trait = incompetent_bender
			}
			waterbender_trained = {
				remove_trait = waterbender_trained
				add_trait = waterbender
				add_trait = competent_bender
			}
			waterbender_powerful = {
				remove_trait = waterbender_powerful
				add_trait = waterbender
				add_trait = powerful_bender
			}
			waterbender_master = {
				remove_trait = waterbender_master
				add_trait = waterbender
				add_trait = master_bender
			}
			waterbender_legendary = {
				remove_trait = waterbender_legendary
				add_trait = waterbender
				add_trait = legendary_bender
			}
			firebender_novice = {
				remove_trait = firebender_novice
				add_trait = firebender
				add_trait = incompetent_bender
			}
			firebender_trained = {
				remove_trait = firebender_trained
				add_trait = firebender
				add_trait = competent_bender
			}
			firebender_powerful = {
				remove_trait = firebender_powerful
				add_trait = firebender
				add_trait = powerful_bender
			}
			firebender_master = {
				remove_trait = firebender_master
				add_trait = firebender
				add_trait = master_bender
			}
			firebender_legendary = { 
				remove_trait = firebender_legendary 
				add_trait = firebender 
				add_trait = legendary_bender 
			}
			earthbender_novice = {
				remove_trait = earthbender_novice
				add_trait = earthbender
				add_trait = incompetent_bender
			}
			earthbender_trained = {
				remove_trait = earthbender_trained
				add_trait = earthbender
				add_trait = competent_bender
			}
			earthbender_powerful = {
				remove_trait = earthbender_powerful
				add_trait = earthbender
				add_trait = powerful_bender
			}
			earthbender_master = {
				remove_trait = earthbender_master
				add_trait = earthbender
				add_trait = master_bender
			}
			earthbender_legendary = {
				remove_trait = earthbender_legendary
				add_trait = earthbender
				add_trait = legendary_bender
			}
			airbender_novice = {
				remove_trait = airbender_novice
				add_trait = airbender
				add_trait = incompetent_bender
			}
			airbender_trained = {
				remove_trait = airbender_trained
				add_trait = airbender
				add_trait = competent_bender
			}
			airbender_powerful = {
				remove_trait = airbender_powerful
				add_trait = airbender
				add_trait = powerful_bender
			}
			airbender_master = {
				remove_trait = airbender_master
				add_trait = airbender
				add_trait = master_bender
			}
			airbender_legendary = {
				remove_trait = airbender_legendary
				add_trait = airbender
				add_trait = legendary_bender
			}
		}
		
		if = {
			limit = {
				trait = blueflames_rd
				trait = firebender
			}
			if = {
				limit = {
					trait = combustionbender_rd
				}
				remove_trait = combustionbender_rd
				remove_trait = blueflames_rd
			}
			else = {
				remove_trait = blueflames_rd
				add_trait = blueflames
			}
		}
		if = {
			limit = {
				trait = innerflame_rd
				trait = firebender
			}
			if = {
				limit = {
					trait = combustionbender_rd
				}
				remove_trait = combustionbender_rd
				remove_trait = innerflame_rd
			}
			else = {
				remove_trait = innerflame_rd
				add_trait = innerflame
			}
		}
		if = {
			limit = {
				trait = lightningbender_rd
				trait = firebender
			}
			if = {
				limit = {
					trait = combustionbender_rd
				}
				remove_trait = combustionbender_rd
				remove_trait = lightningbender_rd
			}
			else = {
				remove_trait = lightningbender_rd
				add_trait = lightningbender
			}
		}
		if = {
			limit = {
				trait = smokebender_rd
				trait = firebender
			}
			if = {
				limit = {
					trait = combustionbender_rd
				}
				remove_trait = combustionbender_rd
				remove_trait = smokebender_rd
			}
			else = {
				remove_trait = smokebender_rd
				add_trait = smokebender
			}
		}
		if = {
			limit = {
				trait = combustionbender_rd
				trait = firebender
			}
			if = {
				limit = {
					OR = {	
						trait = lightningbender_rd
						trait = innerflame_rd
						trait = blueflames_rd
						trait = smokebender_rd
					}
				}
				remove_trait = lightningbender_rd
				remove_trait = innerflame_rd
				remove_trait = blueflames_rd
				remove_trait = smokebender_rd
				remove_trait = combustionbender_rd
			}
			else = {
				remove_trait = combustionbender_rd
				add_trait = combustionbender
			}
		}

		if = {
			limit = {
				trait = lavabender_rd
				trait = earthbender
			}
			remove_trait = lavabender_rd
			add_trait = lavabender
		}
		if = {
			limit = {
				trait = sandbender_rd
				trait = earthbender
			}
			remove_trait = sandbender_rd
			add_trait = sandbender
		}	
		if = {
			limit = {
				trait = seismicsense_rd
				trait = earthbender
			}
			if = {
				limit = {
					OR = {
						trait = blind
						trait = blinded
					}
				}
				remove_trait = seismicsense_rd
				add_trait = seismicsense
			}
			else = {
				remove_trait = seismicsense_rd
				add_trait = seismicsense_nonblind
			}
		}
		if = {
			limit = {
				trait = metalbender_rd
				trait = earthbender
			}
			if = {
				limit = {
					trait = seismicsense
				}
				remove_trait = metalbender_rd
				add_trait = metalbender
			}
			else_if = {
				limit = {
					trait = seismicsense_nonblind
				}
				remove_trait = metalbender_rd
				add_trait = metalbender
			}
			else = {
				remove_trait = metalbender_rd
			}
		}

		if = {
			limit = {
				trait = bloodbender_rd
				trait = waterbender
			}
			remove_trait = bloodbender_rd
			add_trait = bloodbender
		}
		if = {
			limit = {
				trait = healer_rd
				trait = waterbender
				is_female = yes
			}
			remove_trait = healer_rd
			add_trait = healer
		}
		
		if = {
			limit = {
				trait = levitation_rd
				religion = air_spirituality
				trait = airbender
			}
			remove_trait = levitation_rd
			add_trait = levitation
			if = {
				limit = {
					NOT = { religion = air_spirituality }
				}
				remove_trait = levitation_rd
			}			
		}
		if = {
			limit = {
				trait = voidbender_rd
				religion = nomadic_nihilism
				trait = airbender
			}
			remove_trait = voidbender_rd
			add_trait = voidbender
			if = {
				limit = {
					NOT = { religion = nomadic_nihilism }
				}
				remove_trait = voidbender_rd
			}
		}		
	}
}

character_event = { # Earth Kingdom settings
	id = ATLA.103
	is_triggered_only = yes
	hide_window = yes
	only_independent = yes

	trigger = {
		is_save_game = no
		OR = {
			has_landed_title = e_earth_kingdom
			has_landed_title = k_earth_kingdom
		}
	}

	immediate = {
		if = {
			limit = {
				year >= 610
				OR = {
					has_landed_title = e_earth_kingdom
					has_landed_title = k_earth_kingdom
				}
			}
			if = {
				limit = {
					has_landed_title = k_earth_kingdom
				}
				any_independent_ruler = {
					limit = {
						culture_group = earth_kingdom_culture
						mercenary = no
						holy_order = no
						rebel = no
						NOT = { has_landed_title = d_avatar }
						NOT = { religion = way_of_chin }
					}
					if = {
						limit = {
							NOR = { 
								culture = sandbender
								culture = southern_earth
								culture = barbarians	
							}				
							capital_scope = {
								OR = {
									region = world_north_west_kingdom
									region = world_north_east_earth_kingdom
									region = world_central_desert
									region = world_western_earth_kingdom
									region = world_eastern_coast
								}
									
							}
						}
						suzerain = {
							remove_tributary = PREV
						}
						ROOT = {
							make_tributary = {
								who = PREV
								percentage = 0.16
								tributary_type = earth_kingdom_province_tributary
							}
						}
					}
					if = {
						limit = {
							capital_scope = {
								OR = {
									region = world_southern_earth_kingdom
									region = world_earth_islands
									region = world_eastern_coast
									region = world_si_wong_fringe
								}
							}
						}
						suzerain = {
							remove_tributary = PREV
						}
						ROOT = {
							make_tributary = {
								who = PREV
								percentage = 0.12
								tributary_type = earth_kingdom_territory_tributary
							}
						}
					}
					if = {
						limit = {
							OR = {
								culture = barbarians
								culture = sandbender
							}
							capital_scope = {
								OR = {
									region = world_si_wong
									region = world_western_earth_kingdom
									region = world_north_east_earth_kingdom
								}
							}
						}
						suzerain = {
							remove_tributary = PREV
						}
						ROOT = {
							make_tributary = {
								who = PREV
								percentage = 0.1
								tributary_type = earth_kingdom_outpost_tributary
							}
						}
					}
				}
				break = yes
			}
			else_if = {
				limit = {
					has_landed_title = e_earth_kingdom
				}
				any_independent_ruler = {
					limit = {
						culture_group = earth_kingdom_culture
						mercenary = no
						holy_order = no
						rebel = no
						NOT = { has_landed_title = d_avatar }
						NOT = { religion = way_of_chin }
					}
					if = {
						limit = {
							NOR = { 
								culture = sandbender
								culture = southern_earth
								culture = barbarians	
							}				
							capital_scope = {
								OR = {
									region = world_north_west_kingdom
									region = world_north_east_earth_kingdom
									region = world_central_desert
									region = world_western_earth_kingdom
									region = world_eastern_coast
								}
									
							}
						}
						suzerain = {
							remove_tributary = PREV
						}
						ROOT = {
							make_tributary = {
								who = PREV
								percentage = 0.16
								tributary_type = earth_kingdom_province_tributary
							}
						}
					}
					if = {
						limit = {
							capital_scope = {
								OR = {
									region = world_southern_earth_kingdom
									region = world_earth_islands
									region = world_eastern_coast
									region = world_si_wong_fringe
								}
							}
						}
						suzerain = {
							remove_tributary = PREV
						}
						ROOT = {
							make_tributary = {
								who = PREV
								percentage = 0.12
								tributary_type = earth_kingdom_territory_tributary
							}
						}
					}
					if = {
						limit = {
							OR = {
								culture = barbarians
								culture = sandbender
							}
							capital_scope = {
								OR = {
									region = world_si_wong
									region = world_western_earth_kingdom
									region = world_north_east_earth_kingdom
								}
							}
						}
						suzerain = {
							remove_tributary = PREV
						}
						ROOT = {
							make_tributary = {
								who = PREV
								percentage = 0.1
								tributary_type = earth_kingdom_outpost_tributary
							}
						}
					}
				}
				break = yes
			}			
		}
	}
}

character_event = {
	id = ATLA.104
	desc = EVTDESCATLA.104
	picture = GFX_evt_landscape_2
	is_triggered_only = yes

	option = { # Convert
		name = EVTOPTATLAA.104
		religion = FROMFROM
	}

	option = { # No ( player only )
		name = EVTOPTATLAB.104
		trigger = {
			ai = no
		}
		opinion = { modifier = refused_decision who = ROOT years = 5 }
	}
}

character_event = { # Inherit Succession
	id = ATLA.105
	is_triggered_only = yes
	hide_window = yes
	only_rulers = yes

	trigger = {
		any_demesne_title = {
			higher_tier_than = BARON
			OR = {
				AND = {
					ROOT = {
						OR = {
							culture = western_air_nomad
							culture = eastern_air_nomad
						}
					}
					NOT = { has_law = enatic_succession }
				}
				AND = {
					ROOT = {
						OR = {
							culture = northern_air_nomad
							culture = southern_air_nomad
						}
					}
					NOT = { has_law = agnatic_succession }
				}
			}
		}
	}
	option = {
		any_demesne_title = {
			limit = {
				higher_tier_than = BARON
				NOT = { has_law = true_cognatic_succession }
			}
			if = {
				limit = {
					ROOT = {
						OR = {
							culture = western_air_nomad
							culture = eastern_air_nomad
						}
					}
				}
				add_law = { law = enatic_succession cooldown = no opinion_effect = no }
			}
			if = {
				limit = {
					ROOT = {
						OR = {
							culture = northern_air_nomad
							culture = southern_air_nomad
						}
					}
				}
				add_law = { law = agnatic_succession cooldown = no opinion_effect = no }
			}
		}
	}
}

character_event = { # Check Ambition Status
	id = ATLA.106
	is_triggered_only = yes
	hide_window = yes

	trigger = {
		ROOT = {
			has_ambition = obj_see_the_realm_grow
		}
	}

	option = {
		ROOT = {
			export_to_variable = { which = currentRealmSize value = realm_size }
		}
		character_event = { id = ATLA.106  days = 14 }
	}
}

character_event = { # Avatar Reborn - Air
	id = ATLA.107
	desc = EVTDESCATLA.107
	picture = GFX_evt_cliff_face
	is_triggered_only = yes
	hide_from = yes
	ai = no

	option = {
		name = EVTOPTATLAA.107
		trigger = {
			NOT = { religion = fire_nation_imperialism }
			NOT = { culture_group = air_nomad_culture }
		}
	}

	option = {
		name = EVTOPTATLAB.107
		trigger = {
			religion = fire_nation_imperialism
		}
	}

	option = {
		name = EVTOPTATLAC.107
		trigger = {
			culture_group = air_nomad_culture
		}
	}
}

character_event = { # Avatar Reborn - Water
	id = ATLA.108
	desc = EVTDESCATLA.108
	picture = GFX_evt_cliff_face
	is_triggered_only = yes
	hide_from = yes
	ai = no

	option = {
		name = EVTOPTATLAA.108
		trigger = {
			culture_group = water_tribe_culture
		}
	}

	option = {
		name = EVTOPTATLAB.108
		trigger = {
			NOT = { culture_group = water_tribe_culture }
		}
	}
}

character_event = { # Avatar Reborn - Earth
	id = ATLA.109
	desc = EVTDESCATLA.109
	picture = GFX_evt_cliff_face
	is_triggered_only = yes
	hide_from = yes
	ai = no

	option = {
		name = EVTOPTATLAA.109
		trigger = {
			culture_group = earth_kingdom_culture
		}
	}

	option = {
		name = EVTOPTATLAB.109
		trigger = {
			NOT = { culture_group = earth_kingdom_culture }
		}
	}
}

character_event = { # Avatar Reborn - Fire
	id = ATLA.110
	desc = EVTDESCATLA.110
	picture = GFX_evt_cliff_face
	is_triggered_only = yes
	hide_from = yes
	ai = no

	option = {
		name = EVTOPTATLAA.110
		trigger = {
			culture_group = fire_nation_culture
		}
	}

	option = {
		name = EVTOPTATLAB.110
		trigger = {
			NOT = { culture_group = fire_nation_culture }
		}
	}
}

character_event = {
	id = ATLA.11100
	is_triggered_only = yes
	hide_window = yes
	only_independent = yes

	trigger = {
		always = yes
		is_save_game = no
		# OR = {
			# has_game_rule = {
				# name = earth_kingdom_status
				# value = united
			# }
			# has_game_rule = {
				# name = earth_kingdom_status
				# value = dismantled
			# }
			# has_game_rule = {
				# name = earth_kingdom_status
				# value = canon
			# }
		# }
	}

	immediate = {
		any_playable_ruler = {
			limit = {
				independent = yes
				culture_group = earth_kingdom_culture
			}
			character_event = { id = ATLA.103 }
		}
	}
}

character_event = {
	id = ATLA.11101
	is_triggered_only = yes
	hide_window = yes
	only_independent = yes

	trigger = {
		is_save_game = no
		# OR = {
			# has_game_rule = {
				# name = earth_kingdom_status
				# value = united
			# }
			# has_game_rule = {
				# name = earth_kingdom_status
				# value = dismantled
			# }
			# has_game_rule = {
				# name = earth_kingdom_status
				# value = canon
			# }
		# }
		OR = {
			has_landed_title = e_earth_kingdom
			has_landed_title = k_earth_kingdom
		}		
	}
	
	
	immediate = {
		if = {
			limit = {
				OR = {
					has_landed_title = e_earth_kingdom
					has_landed_title = k_earth_kingdom
				}
				#has_landed_title = c_royal_earth_palace
			}
			if = {
				limit = {
					NOT = { year = 602 }
				}
				set_variable = { which = global_royalAuthority value = 20 }
			}
			if = {
				limit = {
					year = 602
					NOT = { year = 830 }
				}
				set_variable = { which = global_royalAuthority value = 50 }
			}
			if = {
				limit = {
					year = 830
					NOT = { year = 925 }
				}
				set_variable = { which = global_royalAuthority value = 90 }
			}
			if = {
				limit = {
					year = 925
					NOT = { year = 931 }
				}
				set_variable = { which = global_royalAuthority value = 10 }
			}
			if = {
				limit = {
					year = 931
					NOT = { year = 978 }
				}
				set_variable = { which = global_royalAuthority value = 40 }
			}
			if = {
				limit = {
					year = 978
				}
				set_variable = { which = global_royalAuthority value = 60 }
			}
		}
	}
	option = {
		if = {
			limit = {
					OR = {
						has_landed_title = e_earth_kingdom
						has_landed_title = k_earth_kingdom
					}
					has_landed_title = c_royal_earth_palace
			}
			add_character_modifier = { name = supporting_the_earth_kingdom duration = -1 }
			primary_title = {
				if = {
					limit = {
						year < 610
					}
					set_title_flag = ek_ra_set_unity_0
				}
				if = {
					limit = {
						year = 610
					}
					set_title_flag = ek_ra_set_unity_1
				}
			}
			if = {
				limit = {
					year < 610
				}
				set_global_flag = earthking_in_power
				set_global_flag = dai_li_disbanded
			}	
		}
	}
}


character_event = {
	id = ATLA.11102
	is_triggered_only = yes
	hide_window = yes
	only_independent = yes

	trigger = {
		always = yes
		# OR = {
			# has_game_rule = {
				# name = earth_kingdom_status
				# value = united
			# }
			# has_game_rule = {
				# name = earth_kingdom_status
				# value = dismantled
			# }
			# has_game_rule = {
				# name = earth_kingdom_status
				# value = canon
			# }
		# }
	}

	option = {
		if = {
			limit = {
				OR = {
					has_landed_title = e_earth_kingdom
					has_landed_title = k_earth_kingdom
				}
				has_landed_title = c_royal_earth_palace
			}
			add_character_modifier = { name = supporting_the_earth_kingdom duration = -1 }
		}
	}
}
