####TRAIT GROUP TRIGGERS####
#If you make changes, update the "Trait group triggers CK2" spreadsheet

#Agreeable
#has_benevolent_trait_trigger		Has a benevolent trait.
#is_benevolent_trigger				Has a benevolent trait and not any evil traits.
#has_pleasant_trait_trigger			Has a pleasant personality trait.
#has_pleasant_personality_trigger	Has a pleasant personality trait and not any unpleasant personality traits.
#has_pious_trait_trigger			Has a piety trait.
#is_pious_trigger					Has a piety trait and not any impious traits.
#has_virtue_trigger					Has a virtue trait.

#Disagreeable
#has_evil_trait_trigger				Has an evil trait.
#is_evil_trigger					Has an evil trait and not any benevolent traits.
#has_unpleasant_trait_trigger		Has an unpleasant personality trait.
#has_unpleasant_personality_trigger	Has an  unpleasant personality trait and not any pleasant personality traits.
#has_impious_trait_trigger			Has an impious trait.
#is_impious_trigger					Has a impious trait and not any piety traits.
#has_vice_trigger					Has a vice trait.

#Attractiveness
#has_attractive_trait_trigger		Has a sex appeal trait.
#is_attractive_trigger				Has a sex appeal trait and not any traits with negative sex appeal.
#has_unattractive_trait_trigger		Has a negative sex appeal trait.
#is_unattractive_trigger			Has a negative sex appeal trait and not any traits with sex appeal.
#has_fair_trait_trigger				Is Fair/Groomed.
#has_ugly_trait_trigger				Is Ugly/Uncouth.

#Health/congential
#is_smart_trigger					Has a smart trait.
#is_dumb_trigger					Has a dumb trait.
#is_strong_trigger					Has a strong trait.
#is_weak_trigger					Has a weak trait.
#well_treated_for_disease_trigger   Has a modifier relating to a positive treatement.
#poorly_treated_for_disease_trigger Has a modifier relating to a negative treatement.
#character_disease_trigger			Has a disease trait.
#has_symptom_trigger				Has a symptom trait.
#has_injury_trigger					Has an injury trait.
#is_maimed_trigger					Has a maimed trait
#has_severe_disability_trigger		Has a severe disability, which makes the characters life really hard.
#has_medium_disability_trigger		Has a medium disability, which limits the character to some extent but they can mostly live a full life.
#has_minor_disability_trigger		Has a minor disability, which does not limit the character in a physical sense, but is a source of ridicule and trauma.
#has_disability_trigger				Has a severe or light disability.
#has_mental_disorder_trigger		Has a mental disorder trait.
#has_fertile_trait_trigger			Has a fertile trait.
#is_fertile_trigger					Has a fertile trait and not any infertile traits.
#has_infertile_trait_trigger		Has an infertile trait.
#is_infertile_trigger				Has an infertile trait and not any fertile traits, OR is celibate OR is eunuch.
#has_negative_congenital_trigger	Has a negative congenital trait

#Diplomacy
#has_education_diplomacy_trigger	Has a diplomacy education trait.
#has_lifestyle_diplomacy_trigger	Has a diplomacy lifestyle trait.
#child_personality_diplomacy_triggerHas a child trait with diplomacy bonus.

#Martial
#has_education_martial_trigger		Has a martial education trait.
#has_lifestyle_martial_trigger		Has a martial lifestyle trait.
#child_personality_martial_trigger	Has a child trait with martial bonus.

#Stewardship
#has_education_stewardship_trigger	Has a stewardship education trait.
#has_lifestyle_stewardship_trigger	Has a stewardship  lifestyle trait.
#child_personality_stewardship_trigger	Has a child trait with stewardship bonus.

#Intrigue
#has_education_intrigue_trigger		Has a intrigue education trait.
#has_lifestyle_intrigue_trigger		Has a intrigue lifestyle trait.
#child_personality_intrigue_trigger	Has a child trait with intrigue bonus.

#Learning
#has_education_learning_trigger		Has a learning education trait.
#has_lifestyle_learning_trigger		Has a learning lifestyle trait.
#child_personality_learning_trigger	Has a child trait with learning bonus.
#is_learned_trigger					Has a scholarly trait, learning-oriented trait.

#has_any_lifestyle_trait			Has any of the above lifestyle traits.

#Religion
#has_crusade_trait_trigger			Has a crusade type trait.
#has_secret_religion_trait_trigger	Has a secret religion trait.

#is_mongol_empire_leader_trigger	If the Character is a Mongol emperor or its liege is

##AGREEABLE###

has_benevolent_trait_trigger = {
	OR = {
		trait = just
		trait = kind
		trait = charitable
		trait = patient
		trait = affectionate
	}
}

is_benevolent_trigger = {
	has_benevolent_trait_trigger = yes
	has_evil_trait_trigger = no
}

has_pleasant_trait_trigger = {
	OR = {
		trait = honest
		trait = gregarious
		trait = trusting
		trait = affectionate
		trait = playful
		trait = socializer
		trait = charitable
		trait = patient
		trait = kind
	}
}

has_pleasant_personality_trigger = {
	has_pleasant_trait_trigger = yes
	has_unpleasant_trait_trigger = no
}

has_pious_trait_trigger = {
	OR = {
		trait = theologian
		trait = celibate
		trait = chaste
		trait = humble
		trait = content
		trait = pilgrim
		is_ascetic_trigger = yes
		trait = zealous
	}
}

is_pious_trigger = {
	has_pious_trait_trigger = yes
	has_impious_trait_trigger = no
}

has_virtue_trigger = {
	OR = {
		trait = chaste
		trait = temperate
		trait = charitable
		trait = diligent
		trait = patient
		trait = kind
		trait = humble
	}
}


##DISAGREEABLE##

has_evil_trait_trigger = {
	OR = {
		trait = arbitrary
		trait = cruel
		trait = impaler
	}
}

is_evil_trigger = {
	has_evil_trait_trigger = yes
	has_benevolent_trait_trigger = no
}

has_unpleasant_trait_trigger = {
	OR = {
		trait = deceitful
		trait = shy
		trait = paranoid
		trait = cruel
		trait = stubborn
		trait = haughty
		trait = brooding
		trait = impaler
		trait = greedy
		trait = wroth
		trait = envious
	}
}

has_unpleasant_personality_trigger = {
	has_unpleasant_trait_trigger = yes
	has_pleasant_trait_trigger = no
}

has_impious_trait_trigger = {
	OR = {
		trait = cynical
		trait = hedonist
		trait = lustful
		trait = cannibal_trait
		trait = impaler
	}
}

is_impious_trigger = {
	has_impious_trait_trigger = yes
	has_pious_trait_trigger = no
}

has_vice_trigger = {
	OR = {
		trait = lustful
		trait = gluttonous
		trait = greedy
		trait = slothful
		trait = wroth
		trait = envious
		trait = proud
	}
}


##ATTRACTIVENESS##

has_attractive_trait_trigger = {
	OR = {
		trait = fair
		trait = groomed
		trait = just
		trait = brave
		trait = gregarious
		trait = seducer
		trait = seductress
		trait = robust
		trait = strong
		trait = socializer
	}
}

is_attractive_trigger = {
	has_attractive_trait_trigger = yes
	has_unattractive_trait_trigger = no
}

has_unattractive_trait_trigger = {
	OR = {
		trait = ugly
		trait = uncouth
		trait = feeble
		trait = dwarf
		trait = giant
		trait = clubfooted
		trait = harelip
		trait = hunchback
		trait = lisp
		trait = weak
		trait = lunatic
		trait = possessed
		trait = has_aztec_disease
		trait = syphilitic
		trait = leper
		trait = maimed
		trait = drunkard
		trait = gluttonous
		trait = craven
		trait = arbitrary
		trait = cruel
		trait = stubborn
		trait = blinded
		trait = horse
		trait = one_eyed
		trait = one_handed
		trait = one_legged
		trait = disfigured
		trait = mangled
		trait = severely_injured
		trait = flu
		trait = dysentery
		trait = food_poisoning
		trait = rabies
		trait = infection
		trait = rash
		trait = vomiting
		trait = diarrhea
		trait = cough
	}
}

is_unattractive_trigger = {
	has_unattractive_trait_trigger = yes
	has_attractive_trait_trigger = no
}


##HEALTH/CONGENTIAL##

is_smart_trigger = {
	OR = {
		trait = genius
		trait = quick
		trait = shrewd
	}
}

is_dumb_trigger = {
	OR = {
		trait = dull
		trait = slow
		trait = imbecile
	}
}

is_strong_trigger = {
	OR = {
		trait = strong
		trait = robust
	}
}

is_weak_trigger = {
	OR = {
		trait = weak
		trait = feeble
	}
}

well_treated_for_disease_trigger = {
	OR = {
		has_character_modifier = mystic_treatment_decent
		has_character_modifier = symptom_treatment_1
		has_character_modifier = symptom_treatment_2
		has_character_modifier = symptom_treatment_3
		has_character_modifier = symptom_treatment_4
		has_character_modifier = successful_treatment_1
		has_character_modifier = successful_treatment_2
		has_character_modifier = successful_treatment_3
	}
}
poorly_treated_for_disease_trigger = {
	OR = {
		has_character_modifier = mystic_treatment_poor
		has_character_modifier = mystic_treatment_terrible
		has_character_modifier = failed_treatment_1
		has_character_modifier = failed_treatment_2
	}
}

character_disease_trigger = {
	OR = {
		trait = has_tuberculosis
		trait = has_typhoid_fever
		trait = has_typhus
		trait = has_bubonic_plague
		trait = has_measles
		trait = has_small_pox
		trait = has_aztec_disease
		trait = syphilitic
		trait = flu
		trait = dysentery
		trait = gout
		trait = food_poisoning
		trait = rabies
		trait = cancer
		trait = pneumonic
	}
}

has_disease_trigger = {
	OR = {
		trait = has_tuberculosis
		trait = has_typhoid_fever
		trait = has_typhus
		trait = has_bubonic_plague
		trait = has_measles
		trait = has_small_pox
		trait = has_aztec_disease
		trait = syphilitic
		trait = flu
		trait = dysentery
		trait = gout
		trait = food_poisoning
		trait = rabies
		trait = cancer
		trait = pneumonic

		trait = dancing_plague
		trait = scurvy
		trait = ill
		trait = leper
		trait = lovers_pox
	}
}


has_symptom_trigger = {
	OR = {
		trait = infection
		trait = malaise
		trait = fatigue
		trait = abdominal_pain
		trait = headache
		trait = rash
		trait = cramps
		trait = chest_pain
		trait = vomiting
		trait = diarrhea
		trait = fever
		trait = cough
	}
}

has_minor_disease_trigger = {
	OR = {
		trait = malaise
		trait = fatigue
		trait = abdominal_pain
		trait = headache
		trait = rash
		trait = cramps
		trait = chest_pain
		trait = vomiting
		trait = diarrhea
		trait = fever
		trait = cough
		trait = ill
		trait = lovers_pox
		trait = flu
	}
}

has_injury_trigger = {
	OR = {
		trait = wounded
		trait = severely_injured
	}
}

is_maimed_trigger = {
	OR = {
		trait = maimed
		trait = one_eyed
		trait = one_handed
		trait = one_legged
		trait = disfigured
		trait = mangled
	}
}

has_severe_disability_trigger = {
	OR = {
		trait = infirm
		trait = mangled
		trait = inbred
		trait = blinded
		trait = incapable
		trait = maimed
	}
}

has_medium_disability_trigger = {
	OR = {
		trait = one_legged
		trait = one_handed
		trait = one_eyed
		trait = clubfooted
		trait = hunchback
		trait = dwarf
		trait = giant
	}
}

has_minor_disability_trigger = {
	OR = {
		trait = disfigured
		trait = eunuch
		trait = harelip
		trait = stutter
		trait = lisp
	}
}

has_disability_trigger = {
	OR = {
		has_severe_disability_trigger = yes
		has_medium_disability_trigger = yes
		has_minor_disability_trigger = yes
	}
}

has_mental_disorder_trigger = {
	OR = {
		trait = stressed
		trait = depressed
		trait = lunatic
		trait = possessed
		trait = drunkard
	}
}

has_fertile_trait_trigger = {
	OR = {
		trait = underhanded_rogue
		trait = charismatic_negotiator
		trait = grey_eminence
		trait = thrifty_clerk
		trait = fortune_builder
		trait = midas_touched
		trait = strong
		trait = hedonist
		trait = lustful
		trait = dancing_plague
	}
}

is_fertile_trigger = {
	has_fertile_trait_trigger = yes
	has_infertile_trait_trigger = no
}

has_infertile_trait_trigger = {
	OR = {
		trait = homosexual
		trait = eunuch
		trait = scholarly_theologian
		trait = mastermind_theologian
		trait = stressed
		trait = depressed
		trait = ill
		trait = pneumonic
		trait = leper
		trait = syphilitic
		trait = has_aztec_disease
		trait = infirm
		trait = incapable
		trait = inbred
		trait = weak
		trait = celibate
		trait = chaste
		trait = mangled
		trait = severely_injured
		trait = dysentery
		trait = food_poisoning
		trait = cancer
	}
}

is_infertile_trigger = {
	OR = {
		AND = {
			has_infertile_trait_trigger = yes
			has_fertile_trait_trigger = no
		}
		trait = eunuch
		trait = celibate
	}
}


##DIPLOMACY##

has_education_diplomacy_trigger = {
	OR = {
		trait = naive_appeaser
		trait = underhanded_rogue
		trait = charismatic_negotiator
		trait = grey_eminence
	}
}

has_lifestyle_diplomacy_trigger = {
	OR = {
		trait = socializer
		trait = gamer
		trait = hedonist
	}
}

child_personality_diplomacy_trigger = {
	OR = {
		trait = affectionate
		trait = playful
	}
}


##MARTIAL##

has_education_martial_trigger = {
	custom_tooltip = {
		text = has_martial_education_tt
		OR = {
			trait = misguided_warrior
			trait = tough_soldier
			trait = skilled_tactician
			trait = brilliant_strategist
		}
	}
}

has_lifestyle_martial_trigger = {
	OR = {
		trait = duelist
		trait = hunter
		trait = strategist
	}
}

child_personality_martial_trigger = {
	OR = {
		trait = haughty
		trait = rowdy
	}
}


##STEWARDSHIP##

has_education_stewardship_trigger = {
	OR = {
		trait = indulgent_wastrel
		trait = thrifty_clerk
		trait = fortune_builder
		trait = midas_touched
	}
}

has_lifestyle_stewardship_trigger = {
	OR = {
		trait = administrator
		trait = architect
		trait = gardener
	}
}

child_personality_stewardship_trigger = {
	OR = {
		trait = conscientious
		trait = fussy
		trait = curious
	}
}


##INTRIGUE##

has_education_intrigue_trigger = {
	OR = {
		trait = amateurish_plotter
		trait = flamboyant_schemer
		trait = intricate_webweaver
		trait = elusive_shadow
	}
}

has_lifestyle_intrigue_trigger = {
	OR = {
		trait = schemer
		trait = impaler
		trait = seducer
		trait = seductress
	}
}

child_personality_intrigue_trigger = {
	OR = {
		trait = willful
		trait = brooding
		trait = indolent
	}
}


##LEARNING##

has_education_learning_trigger = {
	OR = {
		trait = detached_priest
		trait = martial_cleric
		trait = scholarly_theologian
		trait = mastermind_theologian
	}
}

has_lifestyle_learning_trigger = {
	OR = {
		trait = scholar
		trait = theologian
		trait = mystic
#		trait = faqih
	}
}

child_personality_learning_trigger = {
	OR = {
		trait = timid
		trait = idolizer
	}
}

is_learned_trigger = {
	OR = {
		trait = erudite
		trait = scholar
		trait = scholarly_theologian
		trait = mastermind_theologian
		trait = physician
#		trait = faqih
	}
}


has_any_lifestyle_trait = {
	OR = {
		has_lifestyle_diplomacy_trigger = yes
		has_lifestyle_martial_trigger = yes
		has_lifestyle_stewardship_trigger = yes
		has_lifestyle_intrigue_trigger = yes
		has_lifestyle_learning_trigger = yes
	}
}

has_secret_religion_trait_trigger = {
	custom_tooltip = {
		text = no_secret_religion
		has_secret_religion = yes
	}
}

####MERC LEADER/COUNCIL JOB####

#Used with character interaction to replace merc leader. DO NOT REMOVE
can_be_mercenary_leader_potential_trigger = {
	prisoner = no
	is_ruler = no
	is_adult = yes

	NOR = {
		trait = incapable
		is_inaccessible_trigger = yes
		is_ascetic_trigger = yes
	}
	same_realm = FROM
	OR = {
		is_female = no
		FROM = {
			has_law = true_cognatic_succession
		}
	}
}
#Used with character interaction to replace merc leader. DO NOT REMOVE
can_be_mercenary_leader_allow_trigger = {
	is_adult = yes
	liege = { character = FROM }
	custom_tooltip = {
		text = mercenary_martial_education_tooltip
		hidden_tooltip = {
			OR = {
				trait = misguided_warrior
				trait = tough_soldier
				trait = skilled_tactician
				trait = brilliant_strategist
			}
		}
	}
}

#Used with character interaction to replace merc leader. DO NOT REMOVE
replace_mercenary_captain_potential_trigger = {
	is_ruler = yes
	mercenary = yes
	primary_title = {
		has_title_flag = ze_dyn_merc
		band_creator = {
			character = FROM
		}
	}
}

#Used with character interaction to replace merc leader. DO NOT REMOVE
replace_mercenary_captain_allow_trigger = {
	primary_title = {
		NOT = { has_raised_standing_troops = yes }
		band_creator = {
			character = FROM
		}
	}
}

#Used with character interaction to swap council job. DO NOT REMOVE
change_council_job_potential_trigger = {
	liege = { character = FROM }
	OR = {
		AND = {
			OR = {
				has_minor_title = title_councilmember_king
				has_minor_title = title_councilmember_emperor
			}
			OR = {
				can_be_chancellor_trigger = yes
				can_be_marshal_trigger = yes
				can_be_treasurer_trigger = yes
				can_be_spymaster_trigger = yes
			}
		}
		AND = {
			OR = {
				has_job_title = job_chancellor
				has_job_title = job_marshal
				has_job_title = job_treasurer
				has_job_title = job_spymaster
				has_job_title = job_spiritual
			}
			liege = {
				OR = {
					job_chancellor = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
					job_marshal = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
					job_treasurer = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
					job_spymaster = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
					job_spiritual = {
						NOT = { character = ROOT }
						can_swap_job_title = ROOT
					}
				}
			}
		}
	}
}

can_be_chancellor_trigger = {
	OR = {
		AND = {
			OR = {
				AND = { #Patriarchal religions can only hire males. Matriarchal religions can only hire females.
					is_female = no
					NOT = { liege = { religion = { has_religion_feature = religion_matriarchal } } }
				}
				AND = {
					is_female = yes
					OR = {
						liege = { religion = { has_religion_feature = religion_matriarchal } }
						liege = { religion = { has_religion_feature = religion_equal } }
					}
				}
				AND = {
					liege = {
						primary_title = {
							OR = {
								has_law = status_of_women_2
								has_law = status_of_women_3
							}
						}
					}
					OR = {
						liege = {
							OR = {
								dynasty = ROOT
								is_close_relative = ROOT
								any_spouse = { character = ROOT }
								any_consort = { character = ROOT }
							}
						}
						is_landed = yes
						trait = nun

					}
				}
				OR = {
					AND = {
						is_female = yes
						liege = { primary_title = { has_law = status_of_women_4 } }
					}
					has_game_rule = {
						name = gender
						value = all
					}
				}
			}
			is_adult = yes
		}
		has_character_flag = special_chancellor
	}

	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { trait = avatar }
	NOT = { trait = fullyrealisedavatar }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = {
		liege = {
			has_opinion_modifier = {
				who = ROOT
				modifier = opinion_resigned_from_council
			}
		}
	}
}

can_be_marshal_trigger = {
	OR = {
		AND = {
			OR = {
				AND = { #Patriarchal religions can only hire males. Matriarchal religions can only hire females.
					is_female = no
					NOT = { liege = { has_religion_feature = religion_matriarchal } }
				}
				AND = {
					is_female = yes
					OR = {
						liege = { has_religion_feature = religion_matriarchal }
						liege = { has_religion_feature = religion_equal }
					}
				}
				AND = {
					liege = {
						primary_title = {
							OR = {
								has_law = status_of_women_3
							}
						}
					}
					OR = {
						liege = {
							OR = {
								dynasty = ROOT
								is_close_relative = ROOT
								any_spouse = { character = ROOT }
								any_consort = { character = ROOT }
							}
						}
						is_landed = yes

					}
				}
				OR = {
					AND = {
						is_female = yes
						liege = { primary_title = { has_law = status_of_women_4 } }
					}
					has_game_rule = {
						name = gender
						value = all
					}
				}
			}
			is_adult = yes
		}
		has_character_flag = special_marshal
	}

	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { trait = avatar }
	NOT = { trait = fullyrealisedavatar }
	NOT = { has_character_flag = guru }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = {
		liege = {
			has_opinion_modifier = {
				who = ROOT
				modifier = opinion_resigned_from_council
			}
		}
	}
}

can_be_treasurer_trigger = {
	OR = {
		AND = {
			OR = {
				AND = { #Patriarchal religions can only hire males. Matriarchal religions can only hire females.
					is_female = no
					NOT = { liege = { has_religion_feature = religion_matriarchal } }
				}
				AND = {
					is_female = yes
					OR = {
						liege = { has_religion_feature = religion_matriarchal }
						liege = { has_religion_feature = religion_equal }
					}
				}
				AND = {
					liege = {
						primary_title = {
							OR = {
								has_law = status_of_women_2
								has_law = status_of_women_3
							}
						}
					}
					OR = {
						liege = {
							OR = {
								dynasty = ROOT
								is_close_relative = ROOT
								any_spouse = { character = ROOT }
								any_consort = { character = ROOT }
							}
						}
						is_landed = yes
						trait = nun

					}
				}
				OR = {
					AND = {
						is_female = yes
						liege = { primary_title = { has_law = status_of_women_4 } }
					}
					has_game_rule = {
						name = gender
						value = all
					}
				}
			}
			is_adult = yes
		}
		has_character_flag = special_treasurer
	}

	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { trait = avatar }
	NOT = { trait = fullyrealisedavatar }
	NOT = { has_character_flag = guru }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = {
		liege = {
			has_opinion_modifier = {
				who = ROOT
				modifier = opinion_resigned_from_council
			}
		}
	}
}

can_be_spymaster_trigger = {
	OR = {
		AND = {
			OR = {
				AND = { #Patriarchal religions can only hire males. Matriarchal religions can only hire females.
					is_female = no
					NOT = { liege = { has_religion_feature = religion_matriarchal } }
				}
				AND = {
					is_female = yes
					OR = {
						liege = { has_religion_feature = religion_matriarchal }
						liege = { has_religion_feature = religion_equal }
					}
				}
				liege = {
					NOR = {
						liege = { has_religion_feature = religion_matriarchal }
						liege = { has_religion_feature = religion_patriarchal }
					}
					OR = {
						mother = { character = ROOT }
						any_spouse = { character = ROOT }
					}
				}
				AND = {
					liege = {
						primary_title = {
							OR = {
								has_law = status_of_women_1
								has_law = status_of_women_2
								has_law = status_of_women_3
							}
						}
					}
					OR = {
						liege = {
							OR = {
								dynasty = ROOT
								is_close_relative = ROOT
								any_spouse = { character = ROOT }
								any_consort = { character = ROOT }
							}
						}
						is_landed = yes
						trait = nun

					}
				}
				OR = {
					AND = {
						is_female = yes
						liege = { primary_title = { has_law = status_of_women_4 } }
					}
					has_game_rule = {
						name = gender
						value = all
					}
				}
			}
			is_adult = yes
		}
		has_character_flag = special_spymaster
	}

	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { trait = avatar }
	NOT = { trait = fullyrealisedavatar }
	NOT = { has_character_flag = guru }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = {
		liege = {
			has_opinion_modifier = {
				who = ROOT
				modifier = opinion_resigned_from_council
			}
		}
	}
}

can_be_spiritual_trigger = {
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { trait = avatar }
	NOT = { trait = fullyrealisedavatar }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = {
		liege = {
			has_opinion_modifier = {
				who = ROOT
				modifier = opinion_resigned_from_council
			}
		}
	}

	liege = {
		religion = ROOT
	}
	OR = {
		AND = {
			is_adult = yes
			OR = {
				is_female = no
				religion_allows_female_temple_holders = yes
				has_religion_feature = religion_matriarchal
			}
			OR = {
				is_female = yes
				religion_allows_male_temple_holders = yes
				has_religion_feature = religion_patriarchal
			}
		}
		has_character_flag = special_spiritual
	}

	OR = {
		is_theocracy = yes
		AND = {
			liege = { is_tribal = yes }
			is_ruler = no
		}
		AND = {
			clan = yes
			liege = {
				is_nomadic = yes
			}
		}
		AND = {
			has_autocephaly = no
			is_ruler = no
		}
		AND = {
			has_autocephaly = yes
			is_ruler = no
			NOT = {
				any_vassal = { is_theocracy = yes }
			}
		}
	}

	OR = {
		trait = detached_priest
		trait = martial_cleric
		trait = scholarly_theologian
		trait = mastermind_theologian
		has_character_flag = special_spiritual
	}
}

can_be_councilmember_king_trigger = {
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { trait = avatar }
	NOT = { trait = fullyrealisedavatar }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = {
		liege = {
			has_opinion_modifier = {
				modifier = opinion_resigned_from_council
				who = ROOT
			}
		}
	}
	AND = {
		OR = {
			AND = { #Patriarchal religions can only hire males. Matriarchal religions can only hire females.
				is_female = no
				NOT = { liege = { has_religion_feature = religion_matriarchal } }
			}
			AND = {
				is_female = yes
				NOT = { liege = { has_religion_feature = religion_patriarchal } }
			}
			AND = {
				is_female = yes
				liege = {
					primary_title = {
						OR = {
							has_law = status_of_women_1
							has_law = status_of_women_2
							has_law = status_of_women_3
						}
					}
				}
				is_landed = yes
			}
			OR = {
				AND = {
					is_female = yes
					liege = { primary_title = { has_law = status_of_women_4 } }
				}
				has_game_rule = {
					name = gender
					value = all
				}
			}
		}
		is_adult = yes
	}
}

can_be_councilmember_emperor_trigger = {
	independent = no
	prisoner = no
	NOT = { trait = incapable }
	NOT = { trait = in_hiding }
	NOT = { trait = avatar }
	NOT = { trait = fullyrealisedavatar }
	NOT = { has_character_modifier = resigned_in_anger }
	NOT = {
		liege = {
			has_opinion_modifier = {
				who = ROOT
				modifier = opinion_resigned_from_council
			}
		}
	}
	OR = {
		AND = {
			OR = {
				AND = { #Patriarchal religions can only hire males. Matriarchal religions can only hire females.
					is_female = no
					NOT = { liege = { has_religion_feature = religion_matriarchal } }
				}
				AND = {
					is_female = yes
					OR = {
						liege = { has_religion_feature = religion_matriarchal }
						liege = { has_religion_feature = religion_equal }
					}
				}
				AND = {
					is_female = yes
					liege = {
						primary_title = {
							OR = {
								has_law = status_of_women_1
								has_law = status_of_women_2
								has_law = status_of_women_3
							}
						}
					}
					is_landed = yes
				}
				OR = {
					AND = {
						is_female = yes
						liege = { primary_title = { has_law = status_of_women_4 } }
					}
					has_game_rule = {
						name = gender
						value = all
					}
				}
			}
			is_adult = yes
		}
	}
}

###REAPER'S DUE####

can_be_maimed_trigger = {
	OR = {
		AND = {
			NOT = { has_dlc = "Reapers" }
			NOT = { trait = maimed }
		}
		AND = {
			has_dlc = "Reapers"
			NOT = {
				trait = one_eyed
				trait = one_handed
				trait = one_legged
				trait = disfigured
				trait = mangled
			}
		}
	}
}

physician_bad_trigger = {
	OR = {
		has_severe_disability_trigger = yes
		has_mental_disorder_trigger = yes
	}
}

physician_good_trigger = {
	is_learned_trigger = yes
}

is_inaccessible_trigger = { #Remember to write this "is_inaccessible_trigger = no" when scripting, or the tooltip will be messed up (it reads "Is NOT in Hiding, in Seclusion, or out traveling")
	custom_tooltip = {
		text = is_inaccessible_tooltip
		hidden_tooltip = {
			OR = {
				trait = in_hiding
				trait = travelling
				trait = troubled_pregnancy
				trait = pregnancy_finishing
				has_character_modifier = mother_minor_rest
				has_character_modifier = in_seclusion
				has_character_modifier = in_meditation
				has_character_modifier = doing_penance
				has_character_modifier = out_traveling
			}
		}
	}
}

prefers_men_trigger = {
	OR = {
		AND = {
			is_female = yes
			NOT = { trait = homosexual }
		}
		AND = {
			is_female = no
			trait = homosexual
		}
	}
}

root_attraction_trigger = {
	#Returns yes when ROOT is attracted to the scoped character, based on sex
	OR = {
		AND = {
			is_female = yes
			ROOT = { prefers_men_trigger = no }
		}
		AND = {
			is_female = no
			ROOT = { prefers_men_trigger = yes }
		}
	}
}

prev_attraction_trigger = {
	#Returns yes when PREV is attracted to the scoped character, based on sex
	OR = {
		AND = {
			is_female = yes
			PREV = { prefers_men_trigger = no }
		}
		AND = {
			is_female = no
			PREV = { prefers_men_trigger = yes }
		}
	}
}

attacted_to_root_trigger = {
	#Returns yes when scoped character is attracted to ROOT, based on sex
	OR = {
		AND = {
			ROOT = { is_female = yes }
			prefers_men_trigger = no
		}
		AND = {
			ROOT = { is_female = no }
			prefers_men_trigger = yes
		}
	}
}

attacted_to_prev_trigger = {
	OR = {
		AND = {
			PREV = { is_female = yes }
			prefers_men_trigger = no
		}
		AND = {
			PREV = { is_female = no }
			prefers_men_trigger = yes
		}
	}
}

is_unimportant_trigger = {
	NOR = {
		is_married = yes
		is_landed = yes
		has_job_title = yes
		has_minor_title = yes
		AND = {
			NOT = { dynasty = none }
			num_of_dynasty_members = 2
		}
		any_lover = { ai = no }
		any_close_relative = { ai = no }
		any_friend = { ai = no }
		any_rival = { ai = no }
		any_consort = { ai = no }
		num_of_claims = 1
		has_character_flag = eternal_life_mystic
		trait = horse
		has_character_modifier = in_seclusion
		has_character_modifier = elder_long_life_modifier
		immortal = yes
		trait = avatar
		trait = fullyrealisedavatar
	}
}

sad_example_trigger = {
	age = 30
	is_married = no
	NOT = { num_of_children = 1 }
}

has_epidemic_disease_trigger = {
	OR = {
		trait = has_tuberculosis
		trait = has_typhoid_fever
		trait = has_typhus
		trait = has_bubonic_plague
		trait = has_measles
		trait = has_small_pox
		trait = has_aztec_disease
	}
}

developing_epidemic_disease_trigger = {
	OR = {
		has_character_flag = got_tuberculosis
		has_character_flag = got_typhoid_fever
		has_character_flag = got_typhus
		has_character_flag = got_bubonic_plague
		has_character_flag = got_measles
		has_character_flag = got_small_pox
		has_character_flag = got_aztec_disease
	}
}

can_be_prophet_of_doom_trigger = {
	is_adult = yes
	is_married = no
	trait = zealous
	is_landed = no

	OR = {
		trait = ambitious
		trait = misguided_warrior
		trait = elusive_shadow
		trait = lunatic
		trait = possessed
		trait = paranoid
		trait = stubborn
	}
	NOR = {
		trait = content
		trait = cynical
		trait = temperate
		is_main_spouse = yes
		is_landed = yes
		is_close_relative = ROOT
	}
	ai = yes
}

death_murder_trigger = {
	OR = {
		death_murder_unknown_trigger = yes
		death_murder_known_trigger = yes
	}

}

death_murder_unknown_trigger = {
	OR = {
		death_reason = death_murder_unknown
		death_reason = death_murder_unknown_poison
		death_reason = death_murder_unknown_fall
		death_reason = death_murder_unknown_arrow
		death_reason = death_murder_unknown_beheading
		death_reason = death_murder_unknown_snakes
		death_reason = death_murder_unknown_strangle
		death_reason = death_murder_unknown_fear
		death_reason = death_murder_unknown_lightning
		death_reason = death_murder_unknown_combustion
		death_reason = death_murder_unknown_crows
		death_reason = death_murder_unknown_possessed_fall
		death_reason = death_by_firebender
	}
}

death_murder_known_trigger = {
	OR = {
		death_reason = death_murder
		death_reason = death_murder_poison
		death_reason = death_murder_fall
		death_reason = death_murder_drowning
		death_reason = death_murder_butchered
		death_reason = death_murder_arrow
		death_reason = death_murder_beheading
		death_reason = death_murder_snakes
		death_reason = death_murder_strangle
	}
}

death_execution_trigger = {
	OR = {
		death_reason = death_execution
		death_reason = death_execution_crushing
		death_reason = death_execution_ash
		death_reason = death_execution_burning
		death_reason = death_execution_hdq
		death_reason = death_execution_bear
		death_reason = death_execution_lion
		death_reason = death_execution_snake_pit
		death_reason = death_execution_disembowelment
		death_reason = death_execution_boiling
		death_reason = death_execution_sawing
		death_reason = death_execution_hunt
		death_reason = death_execution_live_burial
		death_reason = death_execution_hanging
		death_reason = death_execution_immurement
		death_reason = death_execution_beheading
		death_reason = death_execution_wine
		death_reason = death_execution_poison
		death_reason = death_execution_flaying
		death_reason = death_execution_impaling
		death_reason = death_execution_tiger
		death_reason = death_execution_elephants
		death_reason = death_execution_bamboo
		death_reason = death_execution_stoning
		death_reason = death_execution_crucifixion
		death_reason = death_execution_blood_eagle
		death_reason = death_execution_scaphism
		death_reason = death_execution_drowning_pit
		death_reason = death_execution_garrotting
		death_reason = death_execution_horses
		death_reason = death_execution_back_breaking
		death_reason = death_execution_wheel
		death_reason = death_execution_boar
		death_reason = death_execution_eaten
		death_reason = death_execution_aztec_sacrifice
	}
}

death_sacrificed_trigger = {
	OR = {
		death_reason = death_sacrificed
		death_reason = death_sacrificed_norse
		death_reason = death_sacrificed_ancestors
		death_reason = death_execution_aztec_sacrifice
	}
}

death_accident_trigger = {
	OR = {
		death_reason = death_accident
		death_reason = death_accident_generic_beast
		death_reason = death_accident_bear
		death_reason = death_accident_boar
		death_reason = death_accident_drowning
		death_reason = death_accident_arrow
		death_reason = death_accident_tiger
		death_reason = death_accident_snakes
		death_reason = death_accident_fall
		death_reason = death_by_dragon
		death_reason = death_volcano
	}
}

death_suicide_trigger = {
	OR = {
		death_reason = death_suicide
		death_reason = death_suicide_fall
		death_reason = death_suicide_hanging
		death_reason = death_suicide_poison
	}
}

# Very usable! If poorly named
block_general_event_trigger = {
	OR = {
		is_adult = no
		trait = incapable
		prisoner = yes
		is_inaccessible_trigger = yes
		hidden_trigger = { is_alive = no }
	}
}

is_bender_trait_trigger = {
	OR = {
		trait = firebender
		trait = earthbender
		trait = airbender
		trait = waterbender
	}
}

is_great_fire_duelist_trigger = {
	OR = {
		trait = avatar
		trait = fullyrealisedavatar
		trait = firelord
		trait = lightningbender
		trait = master_bender
		trait = legendary_bender
	}
}

is_great_bender_duelist_trigger = {
	OR = {
		trait = avatar
		trait = fullyrealisedavatar
		trait = master_bender
		trait = legendary_bender
		trait = weapon_master
	}
}

is_actually_important_trigger = {
	OR = {
		mother_even_if_dead = {
			is_landed = yes
		}
		father_even_if_dead = {
			is_landed = yes
		}
		mother_even_if_dead = {
			father_even_if_dead = {
				is_landed = yes
			}
		}
		mother_even_if_dead = {
			mother_even_if_dead = {
				is_landed = yes
			}
		}
		father_even_if_dead = {
			father_even_if_dead = {
				is_landed = yes
			}
		}
		father_even_if_dead = {
			mother_even_if_dead = {
				is_landed = yes
			}
		}
	}
}

is_an_active_tyrant = {
	OR = {
		trait = unjust
		trait = dishonourable
		trait = conqueror
		trait = tyrannical
		trait = irredeemable
	}
}

is_comet_year = {
	OR = {
		AND = {
			year = 630
			NOT = { year = 631 }
		}
		AND = {
			year = 730
			NOT = { year = 731 }
		}
		AND = {
			year = 830
			NOT = { year = 831 }
		}
		AND = {
			year = 930
			NOT = { year = 931 }
		}
		AND = {
			year = 1030
			NOT = { year = 1031 }
		}
	}
}

is_comet_warning_year = {
	OR = {
		AND = {
			year = 610
			NOT = { year = 611 }
		}
		AND = {
			year = 710
			NOT = { year = 711 }
		}
		AND = {
			year = 810
			NOT = { year = 811 }
		}
		AND = {
			year = 910
			NOT = { year = 911 }
		}
		AND = {
			year = 1010
			NOT = { year = 1011 }
		}
	}
}

gender_equality_trigger = {
	OR = {
		has_religion_feature = religion_equal
		AND = {
			is_landed = yes
			primary_title = {
				has_law = status_of_women_4
			}
		}
		AND = {
			is_landed = no
			liege = { primary_title = { has_law = status_of_women_4 } }
		}
		has_game_rule = {
			name = gender
			value = all
		}
	}
}

male_can_hold_minor_title_trigger = {
	trigger_if = {
		limit = {
			NOT = {
				has_game_rule = {
					name = gender
					value = all
				}
			}
		}
		is_female = no
		custom_tooltip = {
			text = tooltip_not_matriarchal_liege_religion_feature
			NOR = {
				has_religion_feature = religion_matriarchal
				liege = {
					has_religion_feature = religion_matriarchal
				}
			}
		}
	}
}

female_can_hold_minor_title_trigger = {
	trigger_if = {
		limit = {
			NOT = {
				has_game_rule = {
					name = gender
					value = all
				}
			}
		}
		is_female = yes
		OR = {
			custom_tooltip = {
				text = tooltip_feminist_liege_religion_feature
				AND = {
					OR = {
						has_religion_feature = religion_equal
						has_religion_feature = religion_matriarchal
					}
					liege = {
						has_religion_feature = religion_equal
						has_religion_feature = religion_matriarchal
					}
				}
			}
			primary_title = {
				OR = {
					has_law = status_of_women_4
					has_law = status_of_women_3
				}
			}
			liege = {
				primary_title = {
					OR = {
						has_law = status_of_women_4
						has_law = status_of_women_3
					}
				}
			}
		}
	}
}

female_can_hold_minor_commander_title_trigger = {
	trigger_if = {
		limit = {
			NOT = {
				has_game_rule = {
					name = gender
					value = all
				}
			}
		}
		is_female = yes
		OR = {
			has_character_flag = special_marshal
			custom_tooltip = {
				text = tooltip_feminist_liege_religion_feature
				AND = {
					OR = {
						has_religion_feature = religion_equal
						has_religion_feature = religion_matriarchal
					}
					liege = {
						has_religion_feature = religion_equal
						has_religion_feature = religion_matriarchal
					}
				}
			}
			primary_title = {
				has_law = status_of_women_4
			}
			liege = {
				primary_title = {
					has_law = status_of_women_4
				}
			}
		}
	}
}
has_prev_education_trigger = {
	OR = {
		AND = {
			has_education_martial_trigger = yes
			PREV = { has_education_martial_trigger = yes }
		}
		AND = {
			has_education_diplomacy_trigger = yes
			PREV = { has_education_diplomacy_trigger = yes }
		}
		AND = {
			has_education_stewardship_trigger = yes
			PREV = { has_education_stewardship_trigger = yes }
		}
		AND = {
			has_education_intrigue_trigger = yes
			PREV = { has_education_intrigue_trigger = yes }
		}
		AND = {
			has_education_learning_trigger = yes
			PREV = { has_education_learning_trigger = yes }
		}
	}
}

useless_character_trigger = {
	OR = {
		NOT = { health = 2.5 }
		trait = lunatic
		trait = maimed
		trait = infirm
		trait = incapable
		trait = mangled
		trait = severely_injured
		trait = imbecile
		trait = inbred
	}
}

#True religion triggers
true_religion_group_earth_religions_trigger = {
	true_religion_group = earth_religions
}
true_religion_group_water_religions_trigger = {
	true_religion_group = water_religions
}
true_religion_group_fire_religions_trigger = {
	true_religion_group = fire_religions
}
true_religion_group_air_religions_trigger = {
	true_religion_group = air_religions
}
true_religion_group_modern_religions_trigger = {
	true_religion_group = modern_religions
}
true_religion_group_outlaw_religions_trigger = {
	true_religion_group = outlaw_religions
}

relationship_with_root_trigger = {
	OR = {
		is_lover = ROOT
		is_friend = ROOT
		is_rival = ROOT
	}
}

is_widow_or_widower_trigger = {
	is_married = no
	any_spouse_even_if_dead = {
		always = yes
	}
}
###Use the actual is_<family member>_of = scope triggers now
family_of_root_trigger = { #use is_blood_relative_of_root_trigger for all relatives
	OR = {
		is_close_relative = ROOT #spouse, parents, children, siblings, grandparents, grandchildren
		cousin_of_root_trigger = yes #cousins
		sibling_child_of_root_trigger = yes #nephews, nieces
		parent_sibling_of_root_trigger = yes #aunts, uncles
		sibling_in_law_of_root_trigger = yes #brothers and sisters in law
	}
}

cousin_of_root_trigger = {
	is_cousin_of = ROOT
}

sibling_of_root_trigger = {
	sibling = ROOT
}

sibling_child_of_root_trigger = {
	is_nibling_of = ROOT
}

parent_sibling_of_root_trigger = {
	is_aunt_uncle_of = ROOT
}

grandchild_of_root_trigger = {
	is_grandchild_of = ROOT
}

sibling_in_law_of_root_trigger = {
	OR = {
		mother_even_if_dead = { any_child = { any_spouse = { character = ROOT } } }
		father_even_if_dead = { any_child = { any_spouse = { character = ROOT } } }
		any_spouse = { mother_even_if_dead = { any_child = { character = ROOT } } }
		any_spouse = { father_even_if_dead = { any_child = { character = ROOT } } }
	}
}

relative_in_law_of_root_trigger = {
	OR = {
		any_child = { any_spouse = { character = ROOT } }
		#any_spouse = { mother_even_if_dead = { any_child = { any_spouse = { character = ROOT } } } }
		#any_spouse = { father_even_if_dead = { any_child = { any_spouse = { character = ROOT } } } }
	}
}

is_murder_quest_target_of_prev_trigger = {
	PREVPREV = {
		# has_quest = quest_the_assassins_assassination
		quest_target = { character = PREVPREV }
	}
}

is_murder_quest_target_of_root_trigger = {
	ROOT = {
		# has_quest = quest_the_assassins_assassination
		quest_target = { character = PREVPREV }
	}
}

interesting_face_trigger = {
	OR = {
		trait = fair
		trait = groomed
		trait = ugly
		trait = uncouth
		has_scarred_trait_trigger = yes
		is_ill = yes
		trait = disfigured
		trait = blinded
		trait = one_eyed
		trait = leper
		trait = harelip
		is_strong_trigger = yes
		is_weak_trigger = yes
		trait = lunatic
		trait = possessed
		trait = rabies
		trait = horse
	}
}

is_rich_holding = {
	OR = {
		calc_true_if = {
			amount = 2
			has_building = ca_keep_3
			has_building = ca_keep_4
			has_building = ca_keep_5
			has_building = ca_keep_6
			has_building = ca_town_3
			has_building = ca_town_4
			has_building = ca_town_5
			has_building = ca_town_6
			has_building = tp_monastery_3
			has_building = tp_monastery_4
			has_building = tp_monastery_5
			has_building = tp_monastery_6
			has_building = tp_town_3
			has_building = tp_town_4
			has_building = tp_town_5
			has_building = tp_town_6
		}
		has_building = ct_marketplace_3
		has_building = ct_marketplace_4
		has_building = ct_marketplace_5
		has_building = ct_marketplace_6

	}
}
is_richer_holding = {

	OR = {
		calc_true_if = {
			amount = 2
			has_building = ca_keep_5
			has_building = ca_keep_6
			has_building = ca_town_5
			has_building = ca_town_6
			has_building = tp_monastery_5
			has_building = tp_monastery_6
			has_building = tp_town_5
			has_building = tp_town_6
		}
		has_building = ct_marketplace_5
		has_building = ct_marketplace_6
	}
}

has_society_currency_trivial_trigger = {
	society_currency >= 15
}

has_society_currency_tiny_trigger = {
	society_currency >= 50
}

has_society_currency_minor_trigger = {
	society_currency >= 150
}

has_society_currency_medium_trigger = {
	society_currency >= 300
}

has_society_currency_major_trigger = {
	society_currency >= 500
}

has_society_currency_large_trigger = {
	society_currency >= 750
}

has_society_currency_massive_trigger = {
	society_currency >= 1000
}

has_society_currency_huge_trigger = {
	society_currency >= 2000
}

has_society_currency_awesome_trigger = {
	society_currency >= 5000
}

is_ill_trigger = {
	OR = {
		has_disease_trigger = yes
	}
}


has_positive_congenital_trigger = {
	OR = {
		trait = strong
		trait = fair
		trait = quick
		trait = genius
	}
}

has_negative_congenital_trigger = {
	OR = {
		trait = ugly
		trait = clubfooted
		trait = hunchback
		trait = dwarf
		trait = giant
		trait = harelip
		trait = stutter
		trait = lisp
		trait = slow
		trait = inbred
		trait = weak
		trait = imbecile
	}
}


is_monastic_member_trigger = {
	OR = {
		society_member_of = monastic_order_elder_council
		society_member_of = the_white_lotus
	}
}

is_ascetic_trigger = {
	custom_tooltip = {
		text = is_ascetic_tooltip
		OR = {
			trait = monk
			trait = nun
		}
	}
}

is_virgin_trigger = {
	NOR = {
		any_lover = { always = yes }
		any_child_even_if_dead = { always = yes }
		any_spouse_even_if_dead = { always = yes }
		has_focus = focus_seduction
		is_pregnant = yes
		trait = pregnant
		trait = lustful
		trait = hedonist
		trait = seducer
		trait = seductress
		trait = lovers_pox
		trait = has_aztec_disease
		trait = syphilitic
	}
	OR = {
		NOT = { age = 25 }
		trait = celibate
		trait = chaste
		trait = shy
		is_ascetic_trigger = yes
	}
}

print_scope_trigger = {
	log = "------------------------------"
	log = "- Printing the current scope -"
	log = "- This: [This.GetName][This.GetBestName]"
	log = "- Root: [Root.GetName][Root.GetBestName]"
	log = "- Prev: [Prev.GetName][Prev.GetBestName]"
	log = "- PrevPrev: [PrevPrev.GetName][PrevPrev.GetBestName]"
	log = "- PrevPrevPrev: [PrevPrevPrev.GetName][PrevPrevPrev.GetBestName]"
	log = "- PrevPrevPrevPrev: [PrevPrevPrevPrev.GetName][PrevPrevPrevPrev.GetBestName]"
	log = "- From: [From.GetName][From.GetBestName]"
	log = "- FromFrom: [FromFrom.GetName][FromFrom.GetBestName]"
	log = "- FromFromFrom: [FromFromFrom.GetName][FromFromFrom.GetBestName]"
	log = "- FromFromFromFrom: [FromFromFromFrom.GetName][FromFromFromFrom.GetBestName]"
	log = "- Event_target:test_target1: [test_target1.GetName][test_target1.GetBestName]"
	log = "- Event_target:test_target2: [test_target2.GetName][test_target2.GetBestName]"
	log = "- Event_target:test_target3: [test_target3.GetName][test_target3.GetBestName]"
	log = "------------------------------"
}

is_secret_religious_society_member_trigger = {
	society_member_of = secret_religious_cult
}

is_openly_of_prevs_secret_religion_trigger = {
	religion = { target = PREV target_type = secret }
}

is_openly_of_roots_secret_religion_trigger = {
	religion = { target = ROOT target_type = secret }
}

has_sympathy_for_true_religion_of_prev_trigger = {
	OR = {
		AND = {
			trait = sympathy_earth_religions
			PREV = { true_religion_group_earth_religions_trigger = yes }
		}
		AND = {
			trait = sympathy_water_religions
			PREV = { true_religion_group_water_religions_trigger = yes }
		}
		AND = {
			trait = sympathy_fire_religions
			PREV = { true_religion_group_fire_religions_trigger = yes }
		}
		AND = {
			trait = sympathy_air_religions
			PREV = { true_religion_group_air_religions_trigger = yes }
		}
		AND = {
			trait = sympathy_modern_religions
			PREV = { true_religion_group_modern_religions_trigger = yes }
		}
		AND = {
			trait = sympathy_outlaw_religions
			PREV = { true_religion_group_outlaw_religions_trigger = yes }
		}
	}
}

has_sympathy_for_true_religion_of_root_trigger = {
	OR = {
		AND = {
			trait = sympathy_earth_religions
			ROOT = { true_religion_group_earth_religions_trigger = yes }
		}
		AND = {
			trait = sympathy_water_religions
			ROOT = { true_religion_group_water_religions_trigger = yes }
		}
		AND = {
			trait = sympathy_fire_religions
			ROOT = { true_religion_group_fire_religions_trigger = yes }
		}
		AND = {
			trait = sympathy_air_religions
			ROOT = { true_religion_group_air_religions_trigger = yes }
		}
		AND = {
			trait = sympathy_modern_religions
			ROOT = { true_religion_group_modern_religions_trigger = yes }
		}
		AND = {
			trait = sympathy_outlaw_religions
			ROOT = { true_religion_group_outlaw_religions_trigger = yes }
		}
	}
}

ok_sr_induction_mission_target_trigger = {
	is_adult = yes
	NOT = { secret_religion = ROOT }
	NOT = { religion = { target_type = secret target = ROOT } }
	prisoner = no
	NOT = { trait = incapable }
	is_inaccessible_trigger = no
	NOT = { has_character_modifier = secret_religion_sympathy_timer }
	#OR = {
		religion_group = { target_type = secret target = ROOT }
		#has_sympathy_for_true_religion_of_root_trigger = yes
	#}
}

ok_sr_sympathy_mission_target_trigger = {
	has_secret_religion_trait_trigger = no
	ROOT = {
		NOT = { secret_religion = { target_type = public target = PREV } }
		NOR = {
			AND = {
				true_religion_group = earth_religions
				PREV = { trait = sympathy_earth_religions }
			}
			AND = {
				true_religion_group = water_religions
				PREV = { trait = sympathy_water_religions }
			}
			AND = {
				true_religion_group = fire_religions
				PREV = { trait = sympathy_fire_religions }
			}
			AND = {
				true_religion_group = air_religions
				PREV = { trait = sympathy_air_religions }
			}
			AND = {
				true_religion_group = modern_religions
				PREV = { trait = sympathy_modern_religions }
			}
			AND = {
				true_religion_group = outlaw_religions
				PREV = { trait = sympathy_outlaw_religions }
			}
		}
	}
	ROOT = { PREV = { is_openly_of_prevs_secret_religion_trigger = no } }
	ROOT = { PREV = { has_sympathy_for_true_religion_of_prev_trigger = no } }
	prisoner = no
	is_adult = yes
	NOT = { trait = incapable }
	is_inaccessible_trigger = no
	NOT = { has_character_modifier = secret_religion_sympathy_timer }
}

has_prevs_secret_religion_truly_trigger = {
	secret_religion = { target = PREV target_type = true }
}

has_roots_secret_religion_truly_trigger = {
	secret_religion = { target = ROOT target_type = true }
}

has_my_liege_secret_religion_truly_trigger = {
	secret_religion = { target = event_target:my_liege target_type = true }
}

is_in_prevs_interesting_society_trigger = {
	OR = {
		AND = {
			society_member_of = secret_religious_society_fire_nation_imperialism
			PREV = { interested_in_society = secret_religious_society_fire_nation_imperialism }
		}
	}
}

shares_prevs_secret_religion_trigger = {
	secret_religion = PREV
}

character_knows_prev_trigger = {
	OR = {
		is_close_relative = PREV
		is_lover = PREV
		is_friend = PREV
		is_rival = PREV
		any_courtier_or_vassal = { character = PREVPREV }
		is_liege_or_above = PREV
		dynasty = PREV
		same_liege = PREV
		AND = {
			is_within_diplo_range = PREV
			PREV = { independent = yes }
		}
	}
}

shares_true_religion_group_with_prev_trigger = {
	true_religion_group = PREV
}

is_openly_of_prevs_true_religion_group = {
	religion_group = { target = PREV target_type = true }
}

is_visible_to_self_trigger = { #For hidden modifiers
	custom_tooltip = {
		text =  is_visible_to_self_trigger_tooltip
		character = FROM
	}
}

can_add_admin_bonus_trigger = {
	NAND = {
		has_province_modifier = harvest_festivals
		has_province_modifier = inspired_peasantry
		has_province_modifier = new_roads
	}
}

can_be_sabotaged_trigger = {
	NAND = {
		has_province_modifier = sabotaged_buildings
		has_province_modifier = sabotaged_defences
		has_province_modifier = sabotaged_unrest
	}
}

same_society_rank_as_prev_trigger = {
	OR = {
		AND = {
			society_rank == 1
			PREV = { society_rank == 1 }
		}
		AND = {
			society_rank == 2
			PREV = { society_rank == 2 }
		}
		AND = {
			society_rank == 3
			PREV = { society_rank == 3 }
		}
		AND = {
			society_rank == 4
			PREV = { society_rank == 4 }
		}
	}
}

higher_society_rank_than_prev_trigger = {
	OR = {
		AND = {
			PREV = { society_rank == 1 }
			society_rank > 1
		}
		AND = {
			PREV = { society_rank == 2 }
			society_rank > 2
		}
		AND = {
			PREV = { society_rank == 3 }
			society_rank > 3
		}
	}
}

higher_society_rank_than_root_trigger = {
	OR = {
		AND = {
			ROOT = { society_rank == 1 }
			society_rank > 1
		}
		AND = {
			ROOT = { society_rank == 2 }
			society_rank > 2
		}
		AND = {
			ROOT = { society_rank == 3 }
			society_rank > 3
		}
	}
}

#returns true if scoped character already likes ROOT and could be physically attracted to them
possibly_romantically_interested_in_ROOT_trigger = {
	NOT = { is_rival = ROOT }
	NOT = { is_lover = ROOT }
	attacted_to_root_trigger = yes
	OR = {
		opinion = { who = ROOT value = 45 }
		has_opinion_modifier = { who = ROOT modifier = opinion_budding_romance }
	}
}

#returns true if scoped character is already liked by ROOT and ROOT could be physically attracted to them
ROOT_possibly_romantically_interested_trigger = {
	NOT = { is_rival = ROOT }
	NOT = { is_lover = ROOT }
	root_attraction_trigger = yes
	OR = {
		reverse_opinion = { who = ROOT value = 45 }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_budding_romance }
	}
}

#returns true if scoped character and ROOT are somewhat likely to fancy each other
possibly_romantically_interested_in_each_other_trigger = {
	possibly_romantically_interested_in_ROOT_trigger = yes
	ROOT_possibly_romantically_interested_trigger = yes
}

have_duplicate_goldsmith_artifacts_flag_okay_trigger = {
	OR = {
		AND = {
		    OR = {
		       	religion_group = earth_religions
		       	religion_group = fire_religions
			}
			AND =
			{
		       	has_artifact = the_lily_crown
       			has_artifact = noble_scepter
        		has_artifact = engraved_sword
		  	}
		}
		AND = {
	        religion_group = modern_religions
	        AND = {
		        has_artifact = engraved_dagger
        		has_artifact = silver_bracelets
		    }
		}
        AND = {
	        religion_group = water_religions
        	AND = {
        		has_artifact = engraved_dagger
        		has_artifact = collar_of_pearls
        	}
        }
        AND = {
	        religion_group = air_religions
			AND = {
			    has_artifact = circlet_of_twilight
        		has_artifact = silver_staff
        	}
        }
       	AND = {
	        religion_group = outlaw_religions
		    AND = {
		        has_artifact = iron_crown
      		    has_artifact = engraved_sword
        	}
        }
        AND = {
        	has_artifact = engraved_crown
        	has_artifact = ceremonial_axe
       	}
    }
}

have_duplicate_goldsmith_artifacts_flag_good_trigger = {
	OR = {
		AND = {
		    OR = {
		       	religion_group = earth_religions
		       	religion_group = fire_religions
			}
			AND =
			{
		       	has_artifact = crown_of_pearls
        		has_artifact = ruby_scepter
        		has_artifact = golden_sword
		  	}
		}
		AND = {
	        religion_group = modern_religions
	        AND = {
		        has_artifact = bejeweled_dagger
        		has_artifact = golden_bracelets
		    }
		}
        AND = {
	        religion_group = water_religions
        	AND = {
        		has_artifact = bejeweled_dagger
        		has_artifact = necklace_of_radiance
        	}
        }
        AND = {
	        religion_group = air_religions
			AND = {
			    has_artifact = circlet_of_the_heavens
        		has_artifact = golden_staff
        	}
        }
       	AND = {
	        religion_group = outlaw_religions
		    AND = {
		        has_artifact = crown_of_the_sea
        		has_artifact = golden_sword
        	}
        }
        AND = {
        	has_artifact = amber_crown
        	has_artifact = obsidian_axe
       	}
    }
}

have_duplicate_goldsmith_artifacts_flag_expensive_trigger = {
	OR = {
		AND = {
		    OR = {
		       	religion_group = earth_religions
		       	religion_group = fire_religions
			}
			AND =
			{
		       	has_artifact = crown_of_majesty
		     	has_artifact = emerald_scepter
		    	has_artifact = sword_of_heroes
		  	}
		}
		AND = {
	        religion_group = modern_religions
	        AND = {
		        has_artifact = dagger_of_glory
		        has_artifact = ruby_bracelets
		    }
		}
        AND = {
	        religion_group = water_religions
        	AND = {
        		has_artifact = dagger_of_glory
        		has_artifact = celestial_necklace
        	}
        }
        AND = {
	        religion_group = air_religions
			AND = {
			    has_artifact = circlet_of_the_heavens
			    has_artifact = staff_of_majesty
        	}
        }
       	AND = {
	        religion_group = outlaw_religions
		    AND = {
		        has_artifact = crown_of_crows
		        has_artifact = sword_of_heroes
        	}
        }
        AND = {
        	has_artifact = heros_crown
        	has_artifact = axe_of_the_ancestors
       	}
    }
}

have_duplicate_goldsmith_artifacts_flag_amazing_trigger = {
	OR = {
		AND = {
		    OR = {
		       	religion_group = earth_religions
		       	religion_group = fire_religions
			}
			AND =
			{
		       	has_artifact = crown_of_majesty_2
		     	has_artifact = emerald_scepter_2
		    	has_artifact = sword_of_heroes_2
		  	}
		}
		AND = {
	        religion_group = modern_religions
	        AND = {
		        has_artifact = dagger_of_glory_2
		        has_artifact = ruby_bracelets_2
		    }
		}
        AND = {
	        religion_group = water_religions
        	AND = {
        		has_artifact = dagger_of_glory_2
        		has_artifact = celestial_necklace_2
        	}
        }
        AND = {
	        religion_group = air_religions
			AND = {
			    has_artifact = circlet_of_the_heavens_2
			    has_artifact = staff_of_majesty_2
        	}
        }
       	AND = {
	        religion_group = outlaw_religions
		    AND = {
		        has_artifact = crown_of_crows_2
		        has_artifact = sword_of_heroes_2
        	}
        }
        AND = {
        	has_artifact = heros_crown_2
        	has_artifact = axe_of_the_ancestors_2
       	}
    }
}

have_all_armorsmith_artifacts_all_flags_trigger = {
	has_artifact = armor_tier_4_guardian
	has_artifact = armor_tier_4_champion
	has_artifact = armor_tier_4_warden
	has_artifact = armor_tier_3_guardian
	has_artifact = armor_tier_3_champion
	has_artifact = armor_tier_3_warden
	has_artifact = armor_tier_2
	has_artifact = armor_tier_1
}

have_all_weaponsmith_artifacts_all_flags_trigger = {
	trigger_if = {
		limit = {
			NOT = {
				religion = children_of_si_wong
			}
		}
		have_all_weaponsmith_swords_all_flags_trigger = yes
	}
	trigger_if = {
		limit = {
			religion = children_of_si_wong
		}
		have_all_weaponsmith_scimitar_all_flags_trigger = yes
	}
	trigger_if = {
		limit = { is_nomadic = yes }
		have_all_weaponsmith_bow_all_flags_trigger = yes
	}

	have_all_weaponsmith_lance_all_flags_trigger = yes
	have_all_weaponsmith_axe_all_flags_trigger = yes
	have_all_weaponsmith_mace_all_flags_trigger = yes
}

have_all_weaponsmith_mace_all_flags_trigger = {
	has_artifact = mace_tier_4_foe_hammer
	has_artifact = mace_tier_3_foe_hammer
    has_artifact = mace_tier_4_bone_breaker
    has_artifact = mace_tier_3_bone_breaker
    has_artifact = mace_tier_4_shatterer
    has_artifact = mace_tier_3_shatterer
    has_artifact = mace_tier_2_new
    has_artifact = mace_tier_1_new
}

have_all_weaponsmith_axe_all_flags_trigger = {
	has_artifact = axe_tier_4_cleaver
	has_artifact = axe_tier_3_cleaver
	has_artifact = axe_tier_4_ravager
	has_artifact = axe_tier_3_ravager
	has_artifact = axe_tier_4_marauder
	has_artifact = axe_tier_3_marauder
	has_artifact = axe_tier_2_new
    has_artifact = axe_tier_1_new
}

have_all_weaponsmith_lance_all_flags_trigger = {
	has_artifact = lance_tier_4_impaler
	has_artifact = lance_tier_3_impaler
	has_artifact = lance_tier_4_trident
	has_artifact = lance_tier_3_trident
	has_artifact = lance_tier_4_piercer
	has_artifact = lance_tier_3_piercer
	has_artifact = lance_tier_2_new
    has_artifact = lance_tier_1_new
}

have_all_weaponsmith_swords_all_flags_trigger = {
	has_artifact = sword_tier_4_heartseeker
	has_artifact = sword_tier_3_heartseeker
	has_artifact = sword_tier_4_vengeance
    has_artifact = sword_tier_3_vengeance
    has_artifact = sword_tier_4_fury
    has_artifact = sword_tier_3_fury
    has_artifact = sword_tier_2_new
    has_artifact = sword_tier_1_new
}

have_all_weaponsmith_scimitar_all_flags_trigger = {
	has_artifact = scimitar_tier_4_golden
	has_artifact = scimitar_tier_3_golden
	has_artifact = scimitar_tier_4_fortune
	has_artifact = scimitar_tier_3_fortune
	has_artifact = scimitar_tier_4_conquest
	has_artifact = scimitar_tier_3_conquest
	has_artifact = scimitar_tier_2_new
    has_artifact = scimitar_tier_1_new
}

have_all_weaponsmith_bow_all_flags_trigger = {
	has_artifact = bow_tier_4_silent_wind
	has_artifact = bow_tier_3_silent_wind
	has_artifact = bow_tier_4_lightning
	has_artifact = bow_tier_3_lightning
	has_artifact = bow_tier_4_eagle
	has_artifact = bow_tier_3_eagle
	has_artifact = bow_tier_2_new
	has_artifact = bow_tier_1_new
}

have_duplicate_smith_artifacts_flag_okay_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_1_new
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar }
        	has_artifact = scimitar_tier_1_new
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance }
        	has_artifact = lance_tier_1_new
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe }
        	has_artifact = axe_tier_1_new
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace }
        	has_artifact = mace_tier_1_new
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow }
        	has_artifact = bow_tier_1_new
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set }
       		has_artifact = armor_tier_1
       	}
    }
}

have_duplicate_smith_artifacts_flag_good_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_2_new
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar }
        	has_artifact = scimitar_tier_2_new
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance }
        	has_artifact = lance_tier_2_new
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe }
        	has_artifact = axe_tier_2_new
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace }
        	has_artifact = mace_tier_2_new
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow }
        	has_artifact = bow_tier_2_new
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set }
       		has_artifact = armor_tier_2
       	}
    }
}

have_duplicate_smith_artifacts_flag_amazing_optionA_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_4_heartseeker
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar }
        	has_artifact = scimitar_tier_4_golden
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance }
        	has_artifact = lance_tier_4_impaler
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe }
        	has_artifact = axe_tier_4_cleaver
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace }
        	has_artifact = mace_tier_4_foe_hammer
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow }
        	has_artifact = bow_tier_4_silent_wind
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set }
       		has_artifact = armor_tier_4_guardian
       	}
    }
}

have_duplicate_smith_artifacts_flag_amazing_optionB_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_4_vengeance
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar }
        	has_artifact = scimitar_tier_4_fortune
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance }
        	has_artifact = lance_tier_4_trident
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe }
        	has_artifact = axe_tier_4_ravager
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace }
        	has_artifact = mace_tier_4_bone_breaker
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow }
        	has_artifact = bow_tier_4_lightning
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set }
       		has_artifact = armor_tier_4_champion
       	}
    }
}

have_duplicate_smith_artifacts_flag_amazing_optionC_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_4_fury
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar }
        	has_artifact = scimitar_tier_4_conquest
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance }
        	has_artifact = lance_tier_4_piercer
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe }
        	has_artifact = axe_tier_4_marauder
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace }
        	has_artifact = mace_tier_4_shatterer
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow }
        	has_artifact = bow_tier_4_eagle
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set }
       		has_artifact = armor_tier_4_warden
       	}
    }
}

have_duplicate_smith_artifacts_flag_expensive_optionA_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_3_heartseeker
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar }
        	has_artifact = scimitar_tier_3_golden
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance }
        	has_artifact = lance_tier_3_impaler
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe }
        	has_artifact = axe_tier_3_cleaver
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace }
        	has_artifact = mace_tier_3_foe_hammer
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow }
        	has_artifact = bow_tier_3_silent_wind
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set }
       		has_artifact = armor_tier_3_guardian
       	}
    }
}

have_duplicate_smith_artifacts_flag_expensive_optionB_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_3_vengeance
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar }
        	has_artifact = scimitar_tier_3_fortune
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance }
        	has_artifact = lance_tier_3_trident
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe }
        	has_artifact = axe_tier_3_ravager
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace }
        	has_artifact = mace_tier_3_bone_breaker
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow }
        	has_artifact = bow_tier_3_lightning
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set }
       		has_artifact = armor_tier_3_champion
       	}
    }
}

have_duplicate_smith_artifacts_flag_expensive_optionC_trigger = {
	OR = {
		AND = {
		    FROM = { has_character_flag = weapon_sword }
			has_artifact = sword_tier_3_fury
		}
		AND = {
	        FROM = { has_character_flag = weapon_scimitar }
        	has_artifact = scimitar_tier_3_conquest
		}
        AND = {
	        FROM = { has_character_flag = weapon_lance }
        	has_artifact = lance_tier_3_piercer
        }
        AND = {
	        FROM = { has_character_flag = weapon_axe }
        	has_artifact = axe_tier_3_marauder
        }
       	AND = {
	        FROM = { has_character_flag = weapon_mace }
        	has_artifact = mace_tier_3_shatterer
        }
        AND = {
        	FROM = { has_character_flag = weapon_bow }
        	has_artifact = bow_tier_3_eagle
       	}
       	AND = {
        	FROM = { has_character_flag = armor_set }
       		has_artifact = armor_tier_3_warden
       	}
    }
}

can_be_asked_to_leave_court_trigger = {
	NOR = {
		custom_tooltip = { #To avoid double negation
			text = is_a_child_tt
			is_adult = no
		}
		prisoner = yes
		trait = incapable
		is_ruler = yes
		has_job_title = yes

		#custom tooltip for minor titles
		custom_tooltip = {
			text = is_regent_commander_or_physician_tt
			OR = {
				has_minor_title = title_regent
				has_minor_title = title_appointed_regent
				has_minor_title = title_commander
				has_minor_title = title_court_physician
			}
		}

		custom_tooltip = {
			text = is_spouse_consort_or_of_your_dynasty
			OR = {
				is_married = FROM
				is_consort = FROM
				is_close_relative = FROM
				sibling = FROM
			}
		}

		is_primary_heir = yes

		#trigger_if has Reaper's Due
		trigger_if = {
			limit = { has_dlc = "Reapers"}
			in_seclusion = yes
		}
		custom_tooltip = {
			text = is_inaccessible_tt
			OR = {
				trait = in_hiding
				trait = travelling
				trait = troubled_pregnancy
				trait = pregnancy_finishing
				has_character_modifier = mother_minor_rest
				has_character_modifier = in_meditation
				has_character_modifier = doing_penance
				has_character_modifier = out_traveling
			}
		}

		#Special circumstances
		custom_tooltip = {
			text = is_character_in_important_chain_of_events_tt
			has_character_flag = eternal_life_mystic
			has_character_flag = immortal_rival
			has_character_flag = flag_special_event_character
			has_character_flag = is_death
			is_immune_to_pruning = yes
			historical = yes
		}

		trigger_if = {
			limit = {
				trait = horse
			}
			trait = horse
		}
	}
}

has_a_seer_modifier_trigger = {
	OR = {
		has_character_modifier = fulfilled_vision_great
		has_character_modifier = fulfilled_vision_ok
		has_character_modifier = fulfilled_vision_bad
		has_character_modifier = fulfilled_vision_worst
	}
}

has_an_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_battle_omen
		has_character_modifier = good_relationship_omen
		has_character_modifier = good_power_omen
		has_character_modifier = bad_battle_omen
		has_character_modifier = bad_relationship_omen
		has_character_modifier = bad_power_omen
	}
}

has_positive_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_battle_omen
		has_character_modifier = good_relationship_omen
		has_character_modifier = good_power_omen
	}
}

has_negative_omen_modifier_trigger = {
	OR = {
		has_character_modifier = bad_battle_omen
		has_character_modifier = bad_relationship_omen
		has_character_modifier = bad_power_omen
	}
}

has_battle_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_battle_omen
		has_character_modifier = bad_battle_omen
	}
}

has_relationship_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_relationship_omen
		has_character_modifier = bad_relationship_omen
	}
}

has_power_omen_modifier_trigger = {
	OR = {
		has_character_modifier = good_power_omen
		has_character_modifier = bad_power_omen
	}
}

has_bottom_tier_education_trait_trigger = {
	OR = {
		trait = naive_appeaser
		trait = misguided_warrior
		trait = indulgent_wastrel
		trait = amateurish_plotter
		trait = detached_priest
	}
}

has_2nd_tier_education_trait_trigger = {
	OR = {
		trait = underhanded_rogue
		trait = tough_soldier
		trait = thrifty_clerk
		trait = flamboyant_schemer
		trait = martial_cleric
	}
}

has_3rd_tier_education_trait_trigger = {
	custom_tooltip = {
		text = tribute_interaction_level4_education_tt
		hidden_trigger = {
			OR = {
				trait = charismatic_negotiator
				trait = skilled_tactician
				trait = fortune_builder
				trait = intricate_webweaver
				trait = scholarly_theologian
			}
		}
	}
}

has_top_tier_education_trait_trigger = {
	custom_tooltip = {
		text = tribute_interaction_level4_education_tt
		hidden_trigger = {
			OR = {
				trait = elusive_shadow
				trait = grey_eminence
				trait = midas_touched
				trait = brilliant_strategist
				trait = mastermind_theologian
			}
		}
	}
}

has_medium_education_trait_trigger = {
	OR = {
		has_2nd_tier_education_trait_trigger = yes
		has_3rd_tier_education_trait_trigger = yes
	}
}

has_childhood_horoscope_modifier_trigger = {
	OR = {
		has_character_modifier = guided_by_horoscope_diplomacy
		has_character_modifier = guided_by_horoscope_martial
		has_character_modifier = guided_by_horoscope_stewardship
		has_character_modifier = guided_by_horoscope_intrigue
		has_character_modifier = guided_by_horoscope_learning
	}
}

is_born_in_january_trigger = {
	month_of_birth = 1
	NOT = { month_of_birth = 2 }
}
is_born_in_february_trigger = {
	month_of_birth = 2
	NOT = { month_of_birth = 3 }
}
is_born_in_march_trigger = {
	month_of_birth = 3
	NOT = { month_of_birth = 4 }
}
is_born_in_april_trigger = {
	month_of_birth = 4
	NOT = { month_of_birth = 5 }
}
is_born_in_may_trigger = {
	month_of_birth = 5
	NOT = { month_of_birth = 6 }
}
is_born_in_june_trigger = {
	month_of_birth = 6
	NOT = { month_of_birth = 7 }
}
is_born_in_july_trigger = {
	month_of_birth = 7
	NOT = { month_of_birth = 8 }
}
is_born_in_august_trigger = {
	month_of_birth = 8
	NOT = { month_of_birth = 9 }
}
is_born_in_september_trigger = {
	month_of_birth = 9
	NOT = { month_of_birth = 10 }
}
is_born_in_october_trigger = {
	month_of_birth = 10
	NOT = { month_of_birth = 11 }
}
is_born_in_november_trigger = {
	month_of_birth = 11
	NOT = { month_of_birth = 12 }
}
is_born_in_december_trigger = {
	month_of_birth = 12
}

is_born_under_Aries_trigger = {
	OR = {
		AND = {
			is_born_in_march_trigger = yes
			day_of_birth = 20 #including this
		}
		AND = {
			is_born_in_april_trigger = yes
			NOT = { day_of_birth = 19 } #not 19th, so 18th at the latest
		}
	}
}
is_born_under_Taurus_trigger = {
	OR = {
		AND = {
			is_born_in_april_trigger = yes
			day_of_birth = 19
		}
		AND = {
			is_born_in_may_trigger = yes
			NOT = { day_of_birth = 20 }
		}
	}
}
is_born_under_Gemini_trigger = {
	OR = {
		AND = {
			is_born_in_may_trigger = yes
			day_of_birth = 20
		}
		AND = {
			is_born_in_june_trigger = yes
			NOT = { day_of_birth = 21 }
		}
	}
}
is_born_under_Cancer_trigger = {
	OR = {
		AND = {
			is_born_in_june_trigger = yes
			day_of_birth = 21
		}
		AND = {
			is_born_in_july_trigger = yes
			NOT = { day_of_birth = 22 }
		}
	}
}
is_born_under_Leo_trigger = {
	OR = {
		AND = {
			is_born_in_july_trigger = yes
			day_of_birth = 22
		}
		AND = {
			is_born_in_august_trigger = yes
			NOT = { day_of_birth = 22 }
		}
	}
}
is_born_under_Virgo_trigger = {
	OR = {
		AND = {
			is_born_in_august_trigger = yes
			day_of_birth = 22
		}
		AND = {
			is_born_in_september_trigger = yes
			NOT = { day_of_birth = 22 }
		}
	}
}
is_born_under_Libra_trigger = {
	OR = {
		AND = {
			is_born_in_september_trigger = yes
			day_of_birth = 22
		}
		AND = {
			is_born_in_october_trigger = yes
			NOT = { day_of_birth = 23 }
		}
	}
}
is_born_under_Scorpius_trigger = {
	OR = {
		AND = {
			is_born_in_october_trigger = yes
			day_of_birth = 23
		}
		AND = {
			is_born_in_november_trigger = yes
			NOT = { day_of_birth = 22 }
		}
	}
}
is_born_under_Sagittarius_trigger = {
	OR = {
		AND = {
			is_born_in_november_trigger = yes
			day_of_birth = 22
		}
		AND = {
			is_born_in_december_trigger = yes
			NOT = { day_of_birth = 21 }
		}
	}
}
is_born_under_Capricorn_trigger = {
	OR = {
		AND = {
			is_born_in_december_trigger = yes
			day_of_birth = 21
		}
		AND = {
			is_born_in_january_trigger = yes
			NOT = { day_of_birth = 20 }
		}
	}
}
is_born_under_Aquarius_trigger = {
	OR = {
		AND = {
			is_born_in_january_trigger = yes
			day_of_birth = 19
		}
		AND = {
			is_born_in_february_trigger = yes
			NOT = { day_of_birth = 18 }
		}
	}
}
is_born_under_Pisces_trigger = {
	OR = {
		AND = {
			is_born_in_february_trigger = yes
			day_of_birth = 18
		}
		AND = {
			is_born_in_march_trigger = yes
			NOT = { day_of_birth = 20 }
		}
	}
}

is_romantic_zodiac_match_with_root_trigger = {
	OR = {
		AND = {
			is_born_under_Aries_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Gemini_trigger = yes
					is_born_under_Leo_trigger = yes
					is_born_under_Sagittarius_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Taurus_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Cancer_trigger = yes
					is_born_under_Virgo_trigger = yes
					is_born_under_Capricorn_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Gemini_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Leo_trigger = yes
					is_born_under_Libra_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Cancer_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Virgo_trigger = yes
					is_born_under_Scorpius_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Leo_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Gemini_trigger = yes
					is_born_under_Libra_trigger = yes
					is_born_under_Sagittarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Virgo_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Cancer_trigger = yes
					is_born_under_Scorpius_trigger = yes
					is_born_under_Capricorn_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Libra_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Gemini_trigger = yes
					is_born_under_Leo_trigger = yes
					is_born_under_Sagittarius_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Scorpius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Cancer_trigger = yes
					is_born_under_Virgo_trigger = yes
					is_born_under_Capricorn_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Sagittarius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Leo_trigger = yes
					is_born_under_Libra_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Capricorn_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Virgo_trigger = yes
					is_born_under_Scorpius_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Aquarius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Gemini_trigger = yes
					is_born_under_Libra_trigger = yes
					is_born_under_Sagittarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Pisces_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Cancer_trigger = yes
					is_born_under_Scorpius_trigger = yes
					is_born_under_Capricorn_trigger = yes
				}
			}
		}
	}
}

is_romantic_zodiac_mismatch_with_root = {
	OR = {
		AND = {
			is_born_under_Aries_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Cancer_trigger = yes
					is_born_under_Capricorn_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Taurus_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Leo_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Gemini_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Virgo_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Cancer_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Libra_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Leo_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Scorpius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Virgo_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Gemini_trigger = yes
					is_born_under_Sagittarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Libra_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Cancer_trigger = yes
					is_born_under_Capricorn_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Scorpius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Leo_trigger = yes
					is_born_under_Aquarius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Sagittarius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Virgo_trigger = yes
					is_born_under_Pisces_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Capricorn_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Aries_trigger = yes
					is_born_under_Libra_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Aquarius_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Taurus_trigger = yes
					is_born_under_Scorpius_trigger = yes
				}
			}
		}
		AND = {
			is_born_under_Pisces_trigger = yes
			ROOT = {
				OR = {
					is_born_under_Gemini_trigger = yes
					is_born_under_Sagittarius_trigger = yes
				}
			}
		}
	}
}


same_true_religion_as_from_trigger = {
	true_religion = FROM
}
same_true_religion_as_root_trigger = {
	true_religion = ROOT
}

#Grace triggers
has_grace_trivial_trigger = {
	has_offmap_currency = { offmap = offmap_spirit_world value = 10 }
}
has_grace_minor_trigger = {
	has_offmap_currency = { offmap = offmap_spirit_world value = 50 }
}
has_grace_medium_trigger = {
	has_offmap_currency = { offmap = offmap_spirit_world value = 150 }
}
has_grace_major_trigger = {
	has_offmap_currency = { offmap = offmap_spirit_world value = 500 }
}
has_grace_massive_trigger = {
	has_offmap_currency = { offmap = offmap_spirit_world value = 1000 }
}

offmap_spirit_world_tribute_decisions_enabled_trigger = {
	NOT = { has_landed_title = d_avatar }
}

offmap_spirit_world_boon_decisions_enabled_trigger = {
	NOT = { has_landed_title = d_avatar }
}

offmap_spirit_world_hostile_decisions_enabled_trigger = {
	NOT = { has_landed_title = d_avatar }
}

is_liked_by_Spirits_trigger = {
	liked_by_offmap = {
        type = offmap_spirit_world
    }
    NOT = {
        disliked_by_offmap = {
            type = offmap_spirit_world
        }
    }
    # offmap_spirit_world = {
    #     show_scope_change = no
    #     custom_tooltip = { text = emperor_likes_THIS_tt }
    # }
}

is_disliked_by_Spirits_trigger = {
	disliked_by_offmap = {
        type = offmap_spirit_world
    }
    NOT = {
		liked_by_offmap = {
            type = offmap_spirit_world
        }
    }
    # offmap_spirit_world = {
    #     show_scope_change = no
    #     custom_tooltip = { text = emperor_dislikes_THIS_tt }
    # }
}

is_liked_and_disliked_by_Spirits = {
    disliked_by_offmap = {
        type = offmap_spirit_world
    }
    liked_by_offmap = {
        type = offmap_spirit_world
    }
    # offmap_spirit_world = {
    #     show_scope_change = no
    #     custom_tooltip = { text = emperor_has_ambiguous_feelings_of_THIS_tt }
    # }
}

likes_fire_spirituality = {
	OR = {
		religion = fire_spirituality
		religion = bhanti_spirituality
		religion = the_eternal_flame
	}
}
likes_earth_spirituality = {
	OR = {
		religion = earth_spirituality
		religion = earth_spirituality_reformed
		religion = the_great_serpent
		religion = children_of_si_wong
		religion = fortune_telling
		religion = fortune_telling_reformed
		religion = followers_of_kyoshi
	}
}
likes_earth_heritage = {
	OR = {
		religion = ba_sing_se_cultural_heritage
		religion = omashuan_ethics
		religion = path_of_jin_wei
		religion = path_of_wei_jin
		religion = the_divided
	}
}
likes_air_spirituality = {
	OR = {
		religion = air_spirituality
		religion = air_acolytism
		religion = neo-nomadism
	}
}
likes_water_spirituality = {
	OR = {
		religion = southern_spirituality
		religion = the_great_swamp
		religion = tui_and_la
	}
}
likes_fire_imperialism = {
	religion = fire_nation_imperialism
}
likes_earth_imperialism = {
	OR = {
		religion = unificationism
		religion = way_of_chin
		religion = way_of_chin_reformed
		religion = earth_monarchism
	}
}
likes_air_imperialism = {
	religion = nomadic_nihilism
}
likes_water_imperialism = {
	religion = witchcraft
}
likes_chaotic_outlaws = {
	OR = {
		religion = piracy
		religion = barbarism
	}
}
likes_orderly_outlaws = {
	religion = modernism
}

## > EK

# JADE DRAGON


## < EK


is_blood_relative_of_root_trigger = {
	OR = {
		is_ancestor_of = ROOT
		is_descendant_of = ROOT
		sibling = ROOT
		is_cousin_of = ROOT
		is_aunt_uncle_of = ROOT
		is_nibling_of = ROOT
		dynasty = ROOT
	}
}

atla_trade_post_potential_trigger = {
	OR = {
		AND = {
			trade_route = southern_earth_trade_route
			southern_earth_trade_post_trigger = yes
		}
		AND = {
			trade_route = eastern_earth_trade_route
			eastern_earth_trade_post_trigger = yes
		}
		AND = {
			trade_route = northern_earth_trade_route
			northern_earth_trade_post_trigger = yes
		}
		AND = {
			trade_route = fire_island_trade_route
			fire_island_trade_post_trigger = yes
		}
		AND = {
			trade_route = water_tribes_trade_route
			water_tribes_trade_post_trigger = yes
		}
		AND = {
			trade_route = si_wong_trail
			si_wong_trail_trade_post_trigger = yes
		}
	}
}

northern_earth_trade_post_trigger = {
	custom_tooltip = {
		text = southern_earth_trade_province_desc
		hidden_tooltip = {
			OR = {
				province_id = 199 #Hejiagou
				province_id = 628 #Xiantong
				province_id = 627 #Panchong
				province_id = 201 #Qiugou
				province_id = 205 #Si Gou
				province_id = 587 #Awooga
				province_id = 191 #He De Xikou
				province_id = 630 #Tanyuan
			}
		}
	}
}

southern_earth_trade_post_trigger = {
	custom_tooltip = {
		text = southern_earth_trade_province_desc
		hidden_tooltip = {
			OR = {
				province_id = 340 #Gaoling
				province_id = 336 #Chin
				province_id = 329 #Mojiang
				province_id = 315 #Zaofu
				province_id = 309 #Omashu
				province_id = 366 #Yunyu
				province_id = 368 #Renxin
				province_id = 360 #Sanyaa
				province_id = 376 #Tongdoa
				province_id = 389 #Kyoshi Island
			}
		}
	}
}

eastern_earth_trade_post_trigger = {
	custom_tooltip = {
		text = eastern_earth_trade_province_desc
		hidden_tooltip = {
			OR = {
			province_id = 183 #Helong
			province_id = 139 #Yaodi
			province_id = 146 #Xiadian
			province_id = 144 #Shannon
			province_id = 152 #Hegang
			province_id = 154 #Yushan
			province_id = 159 #Wuhai
			province_id = 162 #Alxa
			province_id = 166 #Kuka
			province_id = 643 #Shaodong
			province_id = 172 #Niu Ju
			province_id = 169 #Yuci
			province_id = 150 #Nangang
			province_id = 635 #Fuyang
			province_id = 637 #Tongshan
			province_id = 179 #Biajing
			province_id = 182 #Lishudong
			}
		}
	}
}

western_earth_trade_post_trigger = {
	custom_tooltip = {
		text = western_earth_trade_province_desc
		hidden_tooltip = {
			OR = {
				province_id = 228 #Yu Dao
				province_id = 230 #Gaoqing
				province_id = 246 #Garsai
				province_id = 234 #Yantai
				province_id = 216 #Wuying
				province_id = 214 #Badaji
				province_id = 206 #Ningqi
				province_id = 221 #Xiong Lin
				province_id = 540 #Sasakimura
				province_id = 243 #Shijian
			}
		}
	}
}

si_wong_trail_trade_post_trigger = {
	custom_tooltip = {
		text = si_wong_trail_province_desc
		hidden_tooltip = {
			OR = {
				province_id = 307 #Luzhou
				province_id = 283 #Nanwazi
			}
		}
	}
}

water_tribes_trade_post_trigger = {
	custom_tooltip = {
		text = water_tribes_trade_province_desc
		hidden_tooltip = {
			OR = {
				province_id = 7 #Northern Water Tribe
				province_id = 20 #Southern Water Tribe
				province_id = 27 #Qixak
				province_id = 562 #Ublaami
				province_id = 16 #Nigliktok
				province_id = 10 #Tatkret
			}
		}
	}
}

fire_island_trade_post_trigger = {
	custom_tooltip = {
		text = fire_island_trade_province_desc
		hidden_tooltip = {
			OR = {
				province_id = 61 #Fire Capital
				province_id = 79 #Taki
				province_id = 95 #Amagasaki
				province_id = 98 #Shuhon
				province_id = 66 #Tottori
				province_id = 70 #Jooshima
			}
		}
	}
}

is_any_kinslayer_trigger = {
	OR = {
		trait = kinslayer
		trait = familial_kinslayer
		trait = dynastic_kinslayer
		trait = tribal_kinslayer
	}
}

using_unimportant_cb = {
	OR = {
		using_cb = peasant_revolt
		using_cb = heretic_revolt
		using_cb = religious_revolt
		using_cb = liberation_revolt
	}
}

death_no_trace_trigger = {
	OR = {
		death_reason = death_missing
		death_reason = death_vanished
	}
}

is_toddler_age_trigger = {
	age = 0
 	NOT = { age = 4 }
}

is_young_child_age_trigger = {
	age = 4
 	NOT = { age = 9 }
}

is_child_age_trigger = {
	age = 9
 	NOT = { age = 12 }
}

is_adolescent_age_trigger = {
	age = 12
 	NOT = { age = 17 }
}

is_teenager_age_trigger = {
	age = 13
 	NOT = { age = 20 }
}

is_grown_up_age_trigger = {
	age = 20
}

is_middle_aged_trigger = {
	age = 40
	NOT = { age = 65 }
}

is_senior_age_trigger = {
	age = 50
}

is_elder_age_trigger = {
	age = 70
}

# Hardcoded trigger for the Execute Imprisoned interaction. Used for the description warning you of kinslaying
# Root - The executioner
# event_target:kinslayer_target - The person being executed
will_add_kinslayer = {
	OR = {
		AND = {
			NOT = { trait = kinslayer }
			OR = {
				is_ancestor_of = event_target:kinslayer_target
				is_descendant_of = event_target:kinslayer_target
				sibling = event_target:kinslayer_target
			}
		}
		AND = {
			NOR = {
				trait = kinslayer
				trait = familial_kinslayer
			}
			OR = {
				is_cousin_of = event_target:kinslayer_target
				is_aunt_uncle_of = event_target:kinslayer_target
				is_nibling_of = event_target:kinslayer_target
			}
		}
		AND = {
			NOR = {
				trait = kinslayer
				trait = familial_kinslayer
				trait = dynastic_kinslayer
			}
			is_lowborn = no
			dynasty = event_target:kinslayer_target
		}
	}
}

# Hardcoded trigger for the Assassinate interaction. Used for triggering whether it can be used at all
# Root - The person being assassinated
# From - The person doing the assassination
assassination_interaction_trigger = {
	conditional_tooltip = {
		trigger = {
			multiplayer = yes
		}
		custom_tooltip = {
			text = MP_GAME_RULE_ALLOWED
			OR = {
				ai = yes
				NOT = {
					has_game_rule = {
						name = multiplayer_assassinations
						value = no_players
					}
				}
			}
			OR = {
				NOT = {
					has_game_rule = {
						name = multiplayer_assassinations
						value = no_players_or_relatives
					}
				}
				AND = {
					ai = yes
					NOT = {
						any_close_relative = {
							ai = no
							NOT = { character = FROM }
						}
					}
					NOT = {
						any_spouse = {
							ai = no
							NOT = { character = FROM }
						}
					}
					NOT = {
						liege = {
							ai = no
							dynasty = ROOT
							NOT = { character = FROM }
						}
						is_heir = yes
					}
				}
			}
		}
	}
}

#checks whether ROOT has one of the following opinion modifiers against the currently scoped character
root_has_terrible_opinion_modifier_of_this_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
	}
}

#checks whether the current scope has one of the following opinion modifiers against ROOT
this_has_terrible_opinion_modifier_of_root_trigger = {
	OR = {
		has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
	}
}

#for MNM.9000 chain
the_hunt_for_an_artifact_has_made_enough_progress_trigger = {
	OR = {
		AND = {
			event_target:relic_ruler = { check_variable = { which = relic_score value = 8 } } #15 } } old value
			event_target:relic_ruler = { has_character_modifier = relic_rumor_minor }
		}
		AND = {
			event_target:relic_ruler = { check_variable = { which = relic_score value = 14 } } #25 } } old value
			event_target:relic_ruler = { has_character_modifier = relic_rumor_medium }
		}
		AND = {
			event_target:relic_ruler = { check_variable = { which = relic_score value = 20 } } #40 } } old value
			event_target:relic_ruler = { has_character_modifier = relic_rumor_major }
		}
	}
}

has_tribal_or_nomadic_government_trigger = {
	custom_tooltip = {
		text = tribal_or_nomadic_government_tt
		hidden_trigger = {
			OR = {
				government = tribal_government
				government = nomadic_government
			}
		}
	}
}


has_minor_title_relating_to_martial_trigger = { #WIP - feel free to add to this
	OR = {
		has_minor_title = title_master_of_the_horse
		has_minor_title = title_cupbearer
		has_minor_title = title_commander
	}
}


#returns true if scoped character already dislikes ROOT (while not being caught up in a friendship or love, and such)
potentially_interested_in_rivaling_root_trigger = { #must be a character
	NOT = { is_rival = ROOT }
	NOT = { is_lover = ROOT }
	NOT = { is_friend = ROOT }
	NOT = { opinion = { who = ROOT value = 5 } }
	OR = {
		ROOT = { is_foe = PREV } #checks if the current scope has committed a crime against ROOT (I hope)
		is_foe = ROOT  #checks if root has committed a crime against the current scope
		NOT = { opinion = { who = ROOT value = -25 } }
		this_has_terrible_opinion_modifier_of_root_trigger = yes
		#Fill up with fun opinion modifiers, whenever you think of them...! Ideas: opinion_spurned, opinion_revoked_my_title, etc
	}
}
#returns true if scoped character is already disliked by ROOT (while not being caught up in a friendship or love, and such)
root_potentially_interested_in_rivaling_this_trigger = { #must be a character
	NOT = { is_rival = ROOT }
	NOT = { is_lover = ROOT }
	NOT = { is_friend = ROOT }
	NOT = { reverse_opinion = { who = ROOT value = 5 } }
	OR = {
		ROOT = { is_foe = PREV } #checks if the current scope has committed a crime against ROOT (I hope)
		is_foe = ROOT  #checks if root has committed a crime against the current scope
		NOT = { reverse_opinion = { who = ROOT value = -25 } }
		root_has_terrible_opinion_modifier_of_this_trigger = yes
		#Fill up with fun opinion modifiers, whenever you think of them...! Ideas: opinion_spurned, opinion_revoked_my_title, etc
	}
}

#returns true if scoped character and ROOT are both sort of interested in a rivalry
#(they both dislike one another and are not friends, lovers, or rivals already)
current_scope_and_root_make_sense_as_rivals_trigger = {
	potentially_interested_in_rivaling_root_trigger = yes
	root_potentially_interested_in_rivaling_this_trigger = yes
}

#checks whether the current scope has one of the following opinion modifiers against PREV
this_has_friendly_opinion_modifier_of_prev_trigger = {
	OR = {
		has_opinion_modifier = { who = PREV modifier = opinion_budding_friendship }
		has_opinion_modifier = { who = PREV modifier = opinion_was_praised }
		has_opinion_modifier = { who = PREV modifier = opinion_charmed }
		has_opinion_modifier = { who = PREV modifier = opinion_honorable }
		has_opinion_modifier = { who = PREV modifier = opinion_was_rewarded }
		has_opinion_modifier = { who = PREV modifier = nice_adventure }
		has_opinion_modifier = { who = PREV modifier = great_adventure }
		has_opinion_modifier = { who = PREV modifier = epic_adventure }
		has_opinion_modifier = { who = PREV modifier = opinion_accomplice }
		has_opinion_modifier = { who = PREV modifier = opinion_mediator }
		has_opinion_modifier = { who = PREV modifier = opinion_poet_pen_pal }
		has_opinion_modifier = { who = PREV modifier = opinion_calmed }
		has_opinion_modifier = { who = PREV modifier = opinion_cheered_up }
		has_opinion_modifier = { who = PREV modifier = opinion_teach_virtue }
		has_opinion_modifier = { who = PREV modifier = opinion_no_cat }
		has_opinion_modifier = { who = PREV modifier = opinion_feels_appreciated }
		has_opinion_modifier = { who = PREV modifier = opinion_amused }
		has_opinion_modifier = { who = PREV modifier = opinion_swayed_3 }
	}
}

#checks whether PREV has one of the following opinion modifiers against the currently scoped character
prev_has_friendly_opinion_modifier_of_this_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_budding_friendship }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_was_praised }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_charmed }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_honorable }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_was_rewarded }
		reverse_has_opinion_modifier = { who = PREV modifier = nice_adventure }
		reverse_has_opinion_modifier = { who = PREV modifier = great_adventure }
		reverse_has_opinion_modifier = { who = PREV modifier = epic_adventure }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_accomplice }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_mediator }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_poet_pen_pal }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_calmed }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_cheered_up }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_teach_virtue }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_no_cat }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_feels_appreciated }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_amused }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_swayed_3 }
	}
}

#checks whether the current scope has one of the following opinion modifiers against ROOT
this_has_friendly_opinion_modifier_of_root_trigger = {
	OR = {
		has_opinion_modifier = { who = ROOT modifier = opinion_budding_friendship }
		has_opinion_modifier = { who = ROOT modifier = opinion_was_praised }
		has_opinion_modifier = { who = ROOT modifier = opinion_charmed }
		has_opinion_modifier = { who = ROOT modifier = opinion_honorable }
		has_opinion_modifier = { who = ROOT modifier = opinion_was_rewarded }
		has_opinion_modifier = { who = ROOT modifier = nice_adventure }
		has_opinion_modifier = { who = ROOT modifier = great_adventure }
		has_opinion_modifier = { who = ROOT modifier = epic_adventure }
		has_opinion_modifier = { who = ROOT modifier = opinion_accomplice }
		has_opinion_modifier = { who = ROOT modifier = opinion_mediator }
		has_opinion_modifier = { who = ROOT modifier = opinion_poet_pen_pal }
		has_opinion_modifier = { who = ROOT modifier = opinion_calmed }
		has_opinion_modifier = { who = ROOT modifier = opinion_cheered_up }
		has_opinion_modifier = { who = ROOT modifier = opinion_teach_virtue }
		has_opinion_modifier = { who = ROOT modifier = opinion_no_cat }
		has_opinion_modifier = { who = ROOT modifier = opinion_feels_appreciated }
		has_opinion_modifier = { who = ROOT modifier = opinion_amused }
		has_opinion_modifier = { who = ROOT modifier = opinion_swayed_3 }
	}
}

#checks whether ROOT has one of the following opinion modifiers against the currently scoped character
root_has_friendly_opinion_modifier_of_this_trigger = {
	OR = {
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_budding_friendship }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_was_praised }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_charmed }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_honorable }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_was_rewarded }
		reverse_has_opinion_modifier = { who = ROOT modifier = nice_adventure }
		reverse_has_opinion_modifier = { who = ROOT modifier = great_adventure }
		reverse_has_opinion_modifier = { who = ROOT modifier = epic_adventure }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_accomplice }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mediator }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_poet_pen_pal }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_calmed }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_cheered_up }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_teach_virtue }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_no_cat }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_feels_appreciated }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_amused }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_swayed_3 }
	}
}
#returns true if scoped character already likes ROOT
potentially_platonically_interested_in_root_trigger = {
	NOT = { is_rival = ROOT }
	NOT = { is_friend = ROOT }
	opinion = { who = ROOT value = 10 }
	this_has_terrible_opinion_modifier_of_root_trigger = no

	OR = {
		opinion = { who = ROOT value = 45 }
		this_has_friendly_opinion_modifier_of_root_trigger = yes
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_budding_friendship } #Or if ROOT has this opinion of current scope
	}
}

#returns true if scoped character is already liked by ROOT
root_potentially_platonically_interested_in_this_trigger = {
	NOT = { is_rival = ROOT }
	NOT = { is_friend = ROOT }
	root_has_terrible_opinion_modifier_of_this_trigger = no

	OR = {
		reverse_opinion = { who = ROOT value = 45 }
		root_has_friendly_opinion_modifier_of_this_trigger = yes
		has_opinion_modifier = { who = ROOT modifier = opinion_budding_friendship } #Or if current scope has this opinion of current ROOT
	}
}

#returns true if scoped character and ROOT are both sort of interested in a rivalry
#(they both dislike one another and are not friends, lovers, or rivals already)
current_scope_and_root_make_sense_as_friendlies_trigger = {
	potentially_platonically_interested_in_root_trigger = yes
	root_potentially_platonically_interested_in_this_trigger = yes
}
has_fat_for_flag_trigger = {
	OR = {
		has_character_flag = flag_fat_for_gluttony
		has_character_flag = flag_fat_for_stress
		has_character_flag = flag_fat_for_depression
		has_character_flag = flag_fat_for_sloth
		has_character_flag = flag_fat_for_hedonism
		has_character_flag = flag_fat_for_carousing
		has_character_flag = flag_fat_for_family
		has_character_flag = flag_fat_for_content
		has_character_flag = flag_fat_for_lust
		has_character_flag = flag_fat_for_wroth
		has_character_flag = flag_fat_for_drunkard
		has_character_flag = flag_fat_for_boredom #fallback reason
	}
}

has_malnourished_for_flag_trigger = {
	OR = {
		has_character_flag = flag_malnourished_for_temperance
		has_character_flag = flag_malnourished_for_stress
		has_character_flag = flag_malnourished_for_depression
		has_character_flag = flag_malnourished_for_sloth
		has_character_flag = flag_malnourished_for_study
		has_character_flag = flag_malnourished_for_faith
		has_character_flag = flag_malnourished_for_paranoia
		has_character_flag = flag_malnourished_for_diligence
		has_character_flag = flag_malnourished_for_cannibal
		has_character_flag = flag_malnourished_for_craven
		has_character_flag = flag_malnourished_for_boredom #fallback reason
	}
}

is_child_or_sibling_of_from_trigger = {
	custom_tooltip = {
		text = is_child_or_sibling_of_yours_tt
		OR = {
			is_child_of = FROM
			sibling = FROM
		}
	}
}

should_evolve_cultures_trigger = {
	hidden_tooltip = {
		OR = {
			is_alternate_start = no
			has_alternate_start_parameter = {
				key = culture_names
				value = historical
			}
		}
	}
}

non_historical_culture_names_in_alt_start_trigger = {
	hidden_tooltip = {
		AND = {
			is_alternate_start = yes
			NOT = {
				has_alternate_start_parameter = {
					key = culture_names
					value = historical
				}
			}
		}
	}
}

religions_are_standard_trigger = {
	hidden_tooltip = {
		OR = {
			is_alternate_start = no
			has_alternate_start_parameter = {
				key = religion_names
				value = historical
			}
		}
	}
}

this_has_terrible_opinion_modifier_of_root_extended_trigger = {
	OR = {
		#Personal grievances.

		has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder }

		#Family grievances
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_executed_child }

		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
	}
}
root_has_terrible_opinion_modifier_of_this_extended_trigger = {
	OR = {
		#Personal grievances.

		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder }

		#Family grievances
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_tortured_family }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_tortured_close_kin }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_family }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_close_kin }
		reverse_has_opinion_modifier = { who = ROOT modifier = opinion_executed_child }

		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		reverse_has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
	}
}

this_has_terrible_opinion_modifier_of_prev_extended_trigger = {
	OR = {
		#Personal grievances.

		has_opinion_modifier = { who = PREV modifier = opinion_hate }
		has_opinion_modifier = { who = PREV modifier = opinion_tortured_me }
		has_opinion_modifier = { who = PREV modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = PREV modifier = opinion_imprisoned }
		has_opinion_modifier = { who = PREV modifier = attempted_murder }

		#Family grievances
		has_opinion_modifier = { who = PREV modifier = opinion_tortured_family }
		has_opinion_modifier = { who = PREV modifier = opinion_tortured_close_kin }
		has_opinion_modifier = { who = PREV modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = PREV modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = PREV modifier = opinion_executed_child }

		has_opinion_modifier = { who = PREV modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = PREV modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = PREV modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = PREV modifier = attempted_murder_of_sibling }
	}
}
prev_has_terrible_opinion_modifier_of_this_extended_trigger = {
	OR = {
		#Personal grievances.

		reverse_has_opinion_modifier = { who = PREV modifier = opinion_hate }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_mutilated_me }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_imprisoned }
		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder }

		#Family grievances
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_family }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_tortured_close_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_mutilated_family }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_mutilated_close_kin }
		reverse_has_opinion_modifier = { who = PREV modifier = opinion_executed_child }

		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_spouse }
		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_child }
		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_parent }
		reverse_has_opinion_modifier = { who = PREV modifier = attempted_murder_of_sibling }
	}
}
martyrs_death_trigger = {
	OR = {
		death_reason = death_sacrificed
  		death_reason = death_sacrificed_ancestors
  		death_reason = death_execution_aztec_sacrifice

	}
}

personal_grievance_trigger = {
	OR = {
		has_opinion_modifier = { who = ROOT modifier = opinion_hate }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_imprisoned }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder }
	}
}

family_grievance_trigger = {
	OR = {
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_executed_child }

		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
	}
}

no_grievance_trigger = {
	NOR = {
		personal_grievance_trigger = yes
		family_grievance_trigger = yes
	}
}

is_inaccessible_or_incapable_trigger = {
	OR = {
		is_inaccessible_trigger = yes
		trait = incapable
		prisoner = yes
	}
}

lower_educational_trait_trigger = {
	OR = {
		AND = {
			trait = naive_appeaser
			ROOT = {
				OR = {
					trait = underhanded_rogue
					trait = charismatic_negotiator
					trait = grey_eminence
				}
			}
		}
		AND = {
			trait = underhanded_rogue
			ROOT = {
				OR = {
					trait = charismatic_negotiator
					trait = grey_eminence
				}
			}
		}
		AND = {
			trait = charismatic_negotiator
			ROOT = {
				trait = grey_eminence
			}
		}
		AND = {
			trait = misguided_warrior
			ROOT = {
				OR = {
					trait = tough_soldier
					trait = skilled_tactician
					trait = brilliant_strategist
				}
			}
		}
		AND = {
			trait = tough_soldier
			ROOT = {
				OR = {
					trait = skilled_tactician
					trait = brilliant_strategist
				}
			}
		}
		AND = {
			trait = skilled_tactician
			ROOT = {
				trait = brilliant_strategist
			}
		}
		AND = {
			trait = indulgent_wastrel
			ROOT = {
				OR = {
					trait = thrifty_clerk
					trait = fortune_builder
					trait = midas_touched
				}
			}
		}
		AND = {
			trait = thrifty_clerk
			ROOT = {
				OR = {
					trait = fortune_builder
					trait = midas_touched
				}
			}
		}
		AND = {
			trait = fortune_builder
			ROOT = {
				trait = midas_touched
			}
		}
		AND = {
			trait = amateurish_plotter
			ROOT = {
				OR = {
					trait = flamboyant_schemer
					trait = intricate_webweaver
					trait = elusive_shadow
				}
			}
		}
		AND = {
			trait = flamboyant_schemer
			ROOT = {
				OR = {
					trait = intricate_webweaver
					trait = elusive_shadow
				}
			}
		}
		AND = {
			trait = intricate_webweaver
			ROOT = {
				trait = elusive_shadow
			}
		}
		AND = {
			trait = detached_priest
			ROOT = {
				OR = {
					trait = martial_cleric
					trait = scholarly_theologian
					trait = mastermind_theologian
				}
			}
		}
		AND = {
			trait = martial_cleric
			ROOT = {
				OR = {
					trait = scholarly_theologian
					trait = mastermind_theologian
				}
			}
		}
		AND = {
			trait = scholarly_theologian
			ROOT = {
				trait = mastermind_theologian
			}
		}
	}
}

has_scarred_trait_trigger = {
	OR = {
		trait = scarred
		trait = scarred_mid
		trait = scarred_high
	}
}

this_is_warrior_culture_trigger = { #Not really about culture - Used in AI voting logic.
	NOT = { pacifist = yes }
	OR = {
		# religions go here
		has_religion_feature = religion_warlike
		is_tribal = yes
		is_nomadic = yes
	}
}

this_is_diplomatic_culture_trigger = { #Not really about culture - Used in AI voting logic.
	OR = {
		is_feudal = yes
		is_patrician = yes
		is_merchant_republic = yes
	}
	OR = {
		# religions go here
		has_religion_feature = religion_cosmopolitan
	}
}
this_is_spiritual_culture_trigger = { #Not really about culture - Used in AI voting logic.
	OR = {
		# religions go here
		has_religion_feature = religion_peaceful
	}
}
this_is_sea_raider_trigger = {
	OR = {
		trait = pirate_trait
		trait = viking
		trait = ravager
		trait = seaking
		trait = sea_queen
	}
}

can_apply_lame_nickname_trigger = {
	has_nickname = no
}

can_apply_average_nickname_trigger = {
	OR = {
		has_nickname = no
		this_has_lame_nickname_trigger = yes
	}
}

can_apply_cool_nickname_trigger = {
	OR = {
		has_nickname = no
		this_has_lame_nickname_trigger = yes
		this_has_average_nickname_trigger = yes
	}
}

can_apply_super_cool_nickname_trigger = {
	OR = {
		has_nickname = no
		this_has_lame_nickname_trigger = yes
		this_has_average_nickname_trigger = yes
		this_has_cool_nickname_trigger = yes
	}
}

this_has_lame_nickname_trigger = {
	OR = {
		has_nickname = nick_the_avenger
		has_nickname = nick_the_brave
		has_nickname = nick_the_fearless
		has_nickname = nick_the_unlucky
		has_nickname = nick_the_lucky
		has_nickname = nick_the_restorer
		has_nickname = nick_the_effeminate
		has_nickname = nick_the_clueless
		has_nickname = nick_the_ill_tempered
		has_nickname = nick_the_affable
		has_nickname = nick_the_liberator
		has_nickname = nick_the_glorious
		has_nickname = nick_the_younger
		has_nickname = nick_the_youthful
		has_nickname = nick_the_unfaithful
		has_nickname = nick_the_beguiling
		has_nickname = nick_the_temptress
		has_nickname = nick_the_seducer
		has_nickname = nick_the_lewd
		has_nickname = nick_the_lecher
		has_nickname = nick_the_unchaste
		has_nickname = nick_the_culture
		has_nickname = nick_the_rel_group
		has_nickname = nick_the_pilgrim
		has_nickname = nick_the_viking
		has_nickname = nick_the_decadent
		has_nickname = nick_the_shrewd
		has_nickname = nick_the_wily
		has_nickname = nick_the_jovial
		has_nickname = nick_the_jolly
		has_nickname = nick_the_gracious
		has_nickname = nick_the_rash
		has_nickname = nick_the_ruthless
		has_nickname = nick_the_strange
		has_nickname = nick_the_shieldmaiden
		has_nickname = nick_the_clumsy
		has_nickname = nick_the_evil
		has_nickname = nick_the_culture_marauder
		has_nickname = nick_the_kingslayer
		has_nickname = nick_iron_hand
		has_nickname = nick_peg_leg
		has_nickname = nick_the_goldsmith
		has_nickname = nick_the_weaponsmith
		has_nickname = nick_the_armorsmith
		has_nickname = nick_the_trader
		has_nickname = nick_the_lisp_and_lame
		has_nickname = nick_the_able
		has_nickname = nick_the_kind
		has_nickname = nick_the_good
		has_nickname = nick_the_strong
		has_nickname = nick_the_magnanimous
		has_nickname = nick_the_simple
		has_nickname = nick_the_merry
		has_nickname = nick_the_noble
		has_nickname = nick_the_blind
		has_nickname = nick_the_leper
		has_nickname = nick_the_gentle
		has_nickname = nick_the_proud
		has_nickname = nick_the_silent
		has_nickname = nick_the_bastard
		has_nickname = nick_the_gouty
		has_nickname = nick_half_hand
		has_nickname = nick_the_chaste
		has_nickname = nick_the_hunter
		has_nickname = nick_the_fowler
		has_nickname = nick_the_just
		has_nickname = nick_the_lame
		has_nickname = nick_the_handsome
		has_nickname = nick_the_fair
		has_nickname = nick_the_hideous
		has_nickname = nick_the_frog
		has_nickname = nick_the_tenacious
		has_nickname = nick_the_repulsive
		has_nickname = nick_the_mad
		has_nickname = nick_the_fat
		has_nickname = nick_the_hollow
		has_nickname = nick_the_drunkard
		has_nickname = nick_the_cruel
		has_nickname = nick_the_wise
		has_nickname = nick_the_resilient
		has_nickname = nick_one_eye
		has_nickname = nick_one_hand
		has_nickname = nick_one_leg
		has_nickname = nick_the_wicked
		has_nickname = nick_the_bewitched
		has_nickname = nick_the_blessed
		has_nickname = nick_the_monk
		has_nickname = nick_the_ill_ruler
		has_nickname = nick_the_terrible
		has_nickname = nick_the_oppressor
		has_nickname = nick_the_witch
		has_nickname = nick_the_magnificent
		has_nickname = nick_the_careless
		has_nickname = nick_the_young
		has_nickname = nick_the_old
		has_nickname = nick_the_hunchback
		has_nickname = nick_the_scholar
		has_nickname = nick_the_black
		has_nickname = nick_the_flat_chested
		has_nickname = nick_the_oakskin
		has_nickname = nick_the_green_faced
		has_nickname = nick_the_word_thief
		has_nickname = nick_the_pups_gut
		has_nickname = nick_the_jittery
		has_nickname = nick_the_broken_lute
		has_nickname = nick_the_dust_biter
		has_nickname = nick_the_sleepy
		has_nickname = nick_the_squealer
		has_nickname = nick_the_toothless
		has_nickname = nick_butter_teeth
		has_nickname = nick_the_cowardly
		has_nickname = nick_the_squirmy
		has_nickname = nick_the_frantic
		has_nickname = nick_the_spare
		has_nickname = nick_the_dry_throat
		has_nickname = nick_the_floor_kisser
		has_nickname = nick_the_toothless_wolf
		has_nickname = nick_the_rough_hair
		has_nickname = nick_the_singing_crow
		has_nickname = nick_the_broken_nail
		has_nickname = nick_the_forgetful
		has_nickname = nick_the_thin_minded
		has_nickname = nick_the_messy
		has_nickname = nick_the_feeble
		has_nickname = nick_the_milkdrinker
		has_nickname = nick_the_girls_arm
		has_nickname = nick_the_flower
		has_nickname = nick_the_hermit
		has_nickname = nick_the_recluse
		has_nickname = nick_the_absolved
		has_nickname = nick_the_short_tempered
		has_nickname = nick_the_red_cheeks
		has_nickname = nick_the_blushing
		has_nickname = nick_the_shrinking_violet
		has_nickname = nick_the_whiner
		has_nickname = nick_the_moaner
		has_nickname = nick_the_liar
		has_nickname = nick_the_cheater
		has_nickname = nick_the_vain
		has_nickname = nick_the_twitchy
	}
}
this_has_average_nickname_trigger = {
	OR = {
		has_nickname = nick_the_troubadour
		has_nickname = nick_the_holy
		has_nickname = nick_the_usurper
		has_nickname = nick_the_conqueror
		has_nickname = nick_the_victorious
		has_nickname = nick_the_martyr
		has_nickname = nick_the_heathen
		has_nickname = nick_the_jackal
		has_nickname = nick_the_saint
		has_nickname = nick_the_maid
		has_nickname = nick_ring
		has_nickname = nick_of_the_wilds
		has_nickname = nick_the_impaler
		has_nickname = nick_bloodaxe
		has_nickname = nick_the_fox
		has_nickname = nick_the_headless
		has_nickname = nick_the_beheader
		has_nickname = nick_the_red
		has_nickname = nick_the_defender
		has_nickname = nick_the_legendary
		has_nickname = nick_the_slayer_of_culture
		has_nickname = nick_the_butcher
		has_nickname = nick_the_vengeful
		has_nickname = nick_the_betrayer
		has_nickname = nick_the_flayer
		has_nickname = nick_the_tormentor
		has_nickname = nick_the_mutilator
		has_nickname = nick_the_depraved
		has_nickname = nick_the_monster
		has_nickname = nick_the_abomination
		has_nickname = nick_the_inquisitor
		has_nickname = nick_the_purifier
		has_nickname = nick_the_tiger
		has_nickname = nick_the_explorer
		has_nickname = nick_the_astrologer
		has_nickname = nick_the_terrain_commander
		has_nickname = nick_the_ground_warrior
		has_nickname = nick_lord_lady_of_the_terrain
		has_nickname = nick_lord_lady_ground
		has_nickname = nick_warrior_lodge_spirit
		has_nickname = nick_the_cannibal
		has_nickname = nick_the_frail
		has_nickname = nick_the_weak
		has_nickname = nick_the_brute
		has_nickname = nick_the_mule
		has_nickname = nick_the_wealthy
		has_nickname = nick_the_loyal
		has_nickname = nick_the_lord_of_realm
		has_nickname = nick_the_beanstalk
		has_nickname = nick_the_accursed
		has_nickname = nick_the_confessor
		has_nickname = nick_the_bold
		has_nickname = nick_the_unready
		has_nickname = nick_the_tyrant
		has_nickname = nick_the_quarreller
		has_nickname = nick_the_great
		has_nickname = nick_the_giant
		has_nickname = nick_tiny
		has_nickname = nick_the_shield_of_capital
		has_nickname = nick_the_pest
		has_nickname = nick_the_little_crow
		has_nickname = nick_the_piglet
		has_nickname = nick_the_splinter
		has_nickname = nick_the_word_master
		has_nickname = nick_the_mead_master
		has_nickname = nick_the_horse_gelder
		has_nickname = nick_the_undefeated
		has_nickname = nick_the_thigh_biter
		has_nickname = nick_the_hundred_flagons
		has_nickname = nick_the_bottomless
		has_nickname = nick_the_silver_tongue
		has_nickname = nick_the_bard
		has_nickname = nick_the_fairest_of_location
		has_nickname = nick_the_tamer
		has_nickname = nick_the_strongest_of_location
		has_nickname = nick_the_beef_thrasher
		has_nickname = nick_the_dove
		has_nickname = nick_the_stallion
		has_nickname = nick_the_harth_of_location
		has_nickname = nick_the_star_weaver
		has_nickname = nick_the_quick_fingers
		has_nickname = nick_the_strongarm
		has_nickname = nick_the_iron_grip
		has_nickname = nick_the_knuckle_slammer
		has_nickname = nick_the_gods_arm
		has_nickname = nick_the_bone_squeezer
		has_nickname = nick_the_bull
		has_nickname = nick_the_butch
		has_nickname = nick_the_sharp_tongue
		has_nickname = nick_the_trickster
		has_nickname = nick_the_merciless
		has_nickname = nick_the_word_slayer
		has_nickname = nick_the_grinner
		has_nickname = nick_the_poison_tooth
		has_nickname = nick_the_vixen
		has_nickname = nick_the_hyena
		has_nickname = nick_the_guide
		has_nickname = nick_the_elder
		has_nickname = nick_the_knight_of_turnips
		has_nickname = nick_the_festive
		has_nickname = nick_the_burden
		has_nickname = nick_the_snake
	}
}
this_has_cool_nickname_trigger = {
	OR = {
		has_nickname = nick_the_lawgiver
		has_nickname = nick_the_hammer
		has_nickname = nick_the_stranger
		has_nickname = nick_the_bald
		has_nickname = nick_the_stammerer
		has_nickname = nick_the_shadow
		has_nickname = nick_the_whisperer
		has_nickname = nick_the_spider
		has_nickname = nick_the_sword_of_god
		has_nickname = nick_the_sea_devil
		has_nickname = nick_the_lioness
		has_nickname = nick_the_flail_of
		has_nickname = nick_the_scourge_of
		has_nickname = nick_the_scourge
		has_nickname = nick_the_alchemist
		has_nickname = nick_the_survivor
		has_nickname = nick_the_valkyrie
		has_nickname = nick_the_destroyer
		has_nickname = nick_the_scourge_of_god
		has_nickname = nick_the_terror_of_provincename
		has_nickname = nick_son_of_evilgod
		has_nickname = nick_the_cleansing_flame
		has_nickname = nick_the_witch_hunter
		has_nickname = nick_the_eastern_wind
		has_nickname = nick_the_despoiler
		has_nickname = nick_the_bane_of_realmname
		has_nickname = nick_the_great_beast
		has_nickname = nick_the_great_eagle
		has_nickname = nick_the_artist_ruler
		has_nickname = nick_the_ambitious
		has_nickname = nick_the_bloody
		has_nickname = nick_the_diplomat
		has_nickname = nick_the_kind_hearted
		has_nickname = nick_the_generous
		has_nickname = nick_the_executioner
		has_nickname = nick_iron_fist
		has_nickname = nick_stone_fist
		has_nickname = nick_the_bulwark
		has_nickname = nick_the_tower
		has_nickname = nick_the_wall_of_title
		has_nickname = nick_the_underdog
		has_nickname = nick_of_a_thousand_faces
		has_nickname = nick_the_plaguebearer
		has_nickname = nick_the_persevering
		has_nickname = nick_the_bear
		has_nickname = nick_the_boar
		has_nickname = nick_the_faceless
		has_nickname = nick_the_cyclops
		has_nickname = nick_the_dragon
		has_nickname = nick_the_undying
		has_nickname = nick_the_roaring_flame
		has_nickname = nick_the_goliath
		has_nickname = nick_the_skull_crusher
		has_nickname = nick_the_quick_foot
		has_nickname = nick_the_bleeder
		has_nickname = nick_the_sharp_teeth
		has_nickname = nick_the_crimson_flurry
		has_nickname = nick_the_champion_of_province
		has_nickname = nick_the_bone_gnasher
		has_nickname = nick_the_gods_champion
		has_nickname = nick_the_red_gladiator
		has_nickname = nick_the_red_gladiatrix
		has_nickname = nick_the_crimson_gorgon
		has_nickname = nick_the_scarlet_eagle
		has_nickname = nick_the_exalted_chosen_of_province
		has_nickname = nick_the_scarlet_painter
	}
}
this_has_super_cool_nickname_trigger = {
	OR = {
		has_nickname = nick_the_boneless
		has_nickname = nick_bluetooth
		has_nickname = nick_the_world_burner
		has_nickname = nick_the_enlightened
		has_nickname = nick_the_white_raven
		has_nickname = nick_the_salt_snake
		has_nickname = nick_the_salt_viper
		has_nickname = nick_the_siren
		has_nickname = nick_the_wyrm
		has_nickname = nick_the_fury
		has_nickname = nick_the_stormforged
		has_nickname = nick_the_tempest_of_capital
		has_nickname = nick_the_red_storm
		has_nickname = nick_the_scarlet_hands
		has_nickname = nick_the_blood_monger
		has_nickname = nick_the_black_skull
		has_nickname = nick_the_heart_eater
		has_nickname = nick_the_slaughterer
		has_nickname = nick_the_spirit_stalker
		has_nickname = nick_the_soul_flayer
		has_nickname = nick_the_crimson_reaper
		has_nickname = nick_the_dreaded
		has_nickname = nick_the_chest_buster
		has_nickname = nick_the_angel_of_location
		has_nickname = nick_the_chosen_of_gabriel
		has_nickname = nick_the_page_of_lord
		has_nickname = nick_the_maid_of_virgin
		has_nickname = nick_the_messenger_of_christ
		has_nickname = nick_the_deaths_child
		has_nickname = nick_the_snakeling
		has_nickname = nick_the_little_spider
		has_nickname = nick_the_eerie
		has_nickname = nick_the_little_nightmare
		has_nickname = nick_the_ripper
		has_nickname = nick_the_black_widow
		has_nickname = nick_the_ferrante
		has_nickname = nick_the_iron_heart
		has_nickname = nick_the_pale_spider
		has_nickname = nick_the_grim_mistress
		has_nickname = nick_the_young_eagle
		has_nickname = nick_the_green_warrior
		has_nickname = nick_the_warrior_child
		has_nickname = nick_the_young_conqueror
		has_nickname = nick_the_white_knight
		has_nickname = nick_the_virago
		has_nickname = nick_the_bloodhound
		has_nickname = nick_the_warrior_philosopher
		has_nickname = nick_the_angel
		has_nickname = nick_the_pure
		has_nickname = nick_the_celestial
		has_nickname = nick_the_radiant
		has_nickname = nick_the_innocent
		has_nickname = nick_the_peace_maker
		has_nickname = nick_the_munificent
		has_nickname = nick_the_architect
		has_nickname = nick_the_castellan
		has_nickname = nick_the_carpenter
		has_nickname = nick_the_grandiose
		has_nickname = nick_the_griffin
		has_nickname = nick_the_compassionate
		has_nickname = nick_the_founder
		has_nickname = nick_the_bloodlime
		has_nickname = nick_the_patron_of_arts
		has_nickname = nick_the_bastion_of_capital
		has_nickname = nick_the_holy_mason
		has_nickname = nick_the_grand_patriarch
		has_nickname = nick_the_grand_matriarch
		has_nickname = nick_the_philosopher
		has_nickname = nick_the_theologian
		has_nickname = nick_the_zealot
		has_nickname = nick_the_benevolent
	}
}

has_at_least_3_traits_in_common_with_prev_trigger = {
	calc_true_if = {
		amount = 3
		#Virtues...
		AND = {
			trait = chaste
			PREV = { trait = chaste }
		}
		AND = {
			trait = temperate
			PREV = { trait = temperate }
		}
		AND = {
			trait = charitable
			PREV = { trait = charitable }
		}
		AND = {
			trait = diligent
			PREV = { trait = diligent }
		}
		AND = {
			trait = patient
			PREV = { trait = patient }
		}
		AND = {
			trait = kind
			PREV = { trait = kind }
		}
		AND = {
			trait = humble
			PREV = { trait = humble }
		}

		#sins...
		AND = {
			trait = lustful
			PREV = { trait = lustful }
		}
		AND = {
			trait = gluttonous
			PREV = { trait = gluttonous }
		}
		AND = {
			trait = greedy
			PREV = { trait = greedy }
		}
		AND = {
			trait = slothful
			PREV = { trait = slothful }
		}
		AND = {
			trait = envious
			PREV = { trait = envious }
		}
		AND = {
			trait = wroth
			PREV = { trait = wroth }
		}
		AND = {
			trait = proud
			PREV = { trait = proud }
		}

		#Others traits!
		AND = {
			trait = ambitious
			PREV = { trait = ambitious }
		}
		AND = {
			trait = arbitrary
			PREV = { trait = arbitrary }
		}
		AND = {
			trait = brave
			PREV = { trait = brave }
		}
		AND = {
			trait = content
			PREV = { trait = content }
		}
		AND = {
			trait = craven
			PREV = { trait = craven }
		}
		AND = {
			trait = cruel
			PREV = { trait = cruel }
		}
		AND = {
			trait = cynical
			PREV = { trait = cynical }
		}
		AND = {
			trait = deceitful
			PREV = { trait = deceitful }
		}
		AND = {
			trait = erudite
			PREV = { trait = erudite }
		}
		AND = {
			trait = gregarious
			PREV = { trait = gregarious }
		}
		AND = {
			trait = honest
			PREV = { trait = honest }
		}
		AND = {
			trait = just
			PREV = { trait = just }
		}
		AND = {
			trait = paranoid
			PREV = { trait = paranoid }
		}
		AND = {
			trait = shy
			PREV = { trait = shy }
		}
		AND = {
			trait = stubborn
			PREV = { trait = stubborn }
		}
		AND = {
			trait = trusting
			PREV = { trait = trusting }
		}
		AND = {
			trait = zealous
			PREV = { trait = zealous }
		}
	}
}

has_at_least_3_traits_opposite_prev_trigger = {
	calc_true_if = {
		amount = 3
		#Virtues...
		AND = {
			trait = chaste
			PREV = { trait = lustful }
		}
		AND = {
			trait = temperate
			PREV = { trait = gluttonous }
		}
		AND = {
			trait = charitable
			PREV = { trait = greedy }
		}
		AND = {
			trait = diligent
			PREV = { trait = slothful }
		}
		AND = {
			trait = patient
			PREV = { trait = wroth }
		}
		AND = {
			trait = kind
			PREV = {
				OR = {
					trait = envious
					trait = cruel
				}
			}
		}
		AND = {
			trait = humble
			PREV = { trait = proud }
		}

		#sins...
		AND = {
			trait = lustful
			PREV = { trait = chaste }
		}
		AND = {
			trait = gluttonous
			PREV = { trait = temperate }
		}
		AND = {
			trait = greedy
			PREV = { trait = charitable }
		}
		AND = {
			trait = slothful
			PREV = { trait = diligent }
		}
		AND = {
			OR = {
				trait = envious
				trait = cruel
			}
			PREV = { trait = kind }
		}
		AND = {
			trait = wroth
			PREV = { trait = patient }
		}
		AND = {
			trait = proud
			PREV = { trait = humble }
		}

		#Others traits!
		AND = {
			trait = ambitious
			PREV = { trait = content }
		}
		AND = {
			trait = arbitrary
			PREV = { trait = just }
		}
		AND = {
			trait = brave
			PREV = { trait = craven }
		}
		AND = {
			trait = content
			PREV = { trait = ambitious }
		}
		AND = {
			trait = craven
			PREV = { trait = brave }
		}
		AND = {
			trait = cynical
			PREV = { trait = zealous }
		}
		AND = {
			trait = deceitful
			PREV = { trait = honest }
		}
		AND = {
			trait = gregarious
			PREV = { trait = shy }
		}
		AND = {
			trait = honest
			PREV = { trait = deceitful }
		}
		AND = {
			trait = just
			PREV = { trait = arbitrary }
		}
		AND = {
			trait = paranoid
			PREV = { trait = trusting }
		}
		AND = {
			trait = shy
			PREV = { trait = gregarious }
		}
		AND = {
			trait = trusting
			PREV = { trait = paranoid }
		}
		AND = {
			trait = zealous
			PREV = { trait = cynical }
		}
	}
}

has_any_sympathy_trait_trigger = {
	OR = {
		trait = sympathy_earth_religions
		trait = sympathy_water_religions
		trait = sympathy_fire_religions
		trait = sympathy_air_religions
		trait = sympathy_modern_religions
		trait = sympathy_outlaw_religions
	}
}

preferred_gender_based_on_laws_trigger = {
	OR = {
		AND = {
			is_female = no
			PREV = {
				OR = {
					has_law = cognatic_succession
					has_law = agnatic_succession
				}
			}
		}
		PREV = { has_law = true_cognatic_succession }
		AND = {
			is_female = yes
			PREV = {
				OR = {
					has_law = enatic_succession
					has_law = enatic_cognatic_succession
				}
			}
		}
	}
}
# Referenced by the "button_rename" button in the character view
can_rename_character_trigger = {
	is_liege_or_above = FROM
	dynasty = FROM
	age < 10
}

is_sick_or_injured_trigger = {
	OR = {
		trait = pneumonic
		trait = syphilitic
		trait = leper
		trait = maimed
		trait = infirm
		trait = incapable
		trait = has_tuberculosis
		trait = has_typhoid_fever
		trait = has_typhus
		trait = has_bubonic_plague
		trait = has_measles
		trait = has_small_pox
		trait = mangled
		trait = severely_injured
		trait = flu
		trait = dysentery
		trait = gout
		trait = food_poisoning
		trait = rabies
		trait = cancer
		trait = scurvy
	}
}

has_fair_trait_trigger = {
	OR = {
		trait = fair
		trait = groomed
	}
}

has_ugly_trait_trigger = {
	OR = {
		trait = ugly
		trait = uncouth
	}
}
has_any_leadership_trait_trigger = {
	OR = {
		trait = aggressive_leader
		trait = narrow_flank_leader
		trait = cavalry_leader
		trait = defensive_leader
		trait = desert_terrain_leader
		trait = experimenter
		trait = flanker
		trait = flat_terrain_leader
		trait = heavy_infantry_leader
		trait = holy_warrior
		trait = inspiring_leader
		trait = jungle_terrain_leader
		trait = light_foot_leader
		trait = mountain_terrain_leader
		trait = organizer
		trait = rough_terrain_leader
		trait = siege_leader
		trait = trickster
		trait = unyielding_leader
		trait = logistics_expert
		trait = master_of_flame
		trait = sapper
		trait = levy_coordinator
		trait = war_elephant_leader
		trait = winter_soldier
	}
}

has_any_astrology_trait_trigger = {
	OR = {
		trait = zodiac_aquarius
		trait = zodiac_aries
		trait = zodiac_cancer
		trait = zodiac_capricorn
		trait = zodiac_gemini
		trait = zodiac_leo
		trait = zodiac_libra
		trait = zodiac_pisces
		trait = zodiac_sagittarius
		trait = zodiac_scorpio
		trait = zodiac_taurus
		trait = zodiac_virgo
	}
}
this_has_execution_reason_opinion_trigger = {
	OR = {
		has_opinion_modifier = { who = THIS modifier = opinion_rebel_traitor }
		has_opinion_modifier = { who = THIS modifier = opinion_regicide_traitor }
		has_opinion_modifier = { who = THIS modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = THIS modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = THIS modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = THIS modifier = attempted_murder_of_sibling }
		has_opinion_modifier = { who = THIS modifier = attempted_murder_of_vassal }
		has_opinion_modifier = { who = THIS modifier = attempted_murder }
		has_opinion_modifier = { who = THIS modifier = opinion_spouse_slayer }
		has_opinion_modifier = { who = THIS modifier = opinion_murder_attempt }
		has_opinion_modifier = { who = THIS modifier = opinion_killed_close_kin }
		has_opinion_modifier = { who = THIS modifier = opinion_killed_father }
		has_opinion_modifier = { who = THIS modifier = opinion_hajj_attempt_murder }
		has_opinion_modifier = { who = THIS modifier = opinion_castrated_me }
		has_opinion_modifier = { who = THIS modifier = opinion_blinded_me }
		has_opinion_modifier = { who = THIS modifier = opinion_witch }
		has_opinion_modifier = { who = THIS modifier = opinion_takfir }
		has_opinion_modifier = { who = THIS modifier = opinion_attempted_abduction }
		has_opinion_modifier = { who = THIS modifier = opinion_unfaithful_wife }
		has_opinion_modifier = { who = THIS modifier = opinion_unfaithful_husband_crime }
		has_opinion_modifier = { who = THIS modifier = opinion_cuckolded }
		has_opinion_modifier = { who = THIS modifier = opinion_charge_dw }
		has_opinion_modifier = { who = THIS modifier = opinion_tortured_me }
		has_opinion_modifier = { who = THIS modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = THIS modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = THIS modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = THIS modifier = opinion_outlawed_society }
		has_opinion_modifier = { who = THIS modifier = opinion_accused_apostate }
	}
}

root_has_execution_reason_opinion_trigger = {
	OR = {
		has_opinion_modifier = { who = ROOT modifier = opinion_rebel_traitor }
		has_opinion_modifier = { who = ROOT modifier = opinion_regicide_traitor }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_vassal }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder }
		has_opinion_modifier = { who = ROOT modifier = opinion_spouse_slayer }
		has_opinion_modifier = { who = ROOT modifier = opinion_murder_attempt }
		has_opinion_modifier = { who = ROOT modifier = opinion_killed_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_killed_father }
		has_opinion_modifier = { who = ROOT modifier = opinion_hajj_attempt_murder }
		has_opinion_modifier = { who = ROOT modifier = opinion_castrated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_blinded_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_witch }
		has_opinion_modifier = { who = ROOT modifier = opinion_takfir }
		has_opinion_modifier = { who = ROOT modifier = opinion_attempted_abduction }
		has_opinion_modifier = { who = ROOT modifier = opinion_unfaithful_wife }
		has_opinion_modifier = { who = ROOT modifier = opinion_unfaithful_husband_crime }
		has_opinion_modifier = { who = ROOT modifier = opinion_cuckolded }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_dw }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_outlawed_society }
		has_opinion_modifier = { who = ROOT modifier = opinion_accused_apostate }
	}
}

root_has_imprisonment_reason_opinion_trigger = {
	OR = {
		has_opinion_modifier = { who = ROOT modifier = opinion_dishonorable }
		has_opinion_modifier = { who = ROOT modifier = opinion_traitor }
		has_opinion_modifier = { who = ROOT modifier = opinion_rebel_traitor }
		has_opinion_modifier = { who = ROOT modifier = opinion_regicide_traitor }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_spouse }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_child }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_parent }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_sibling }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder_of_vassal }
		has_opinion_modifier = { who = ROOT modifier = attempted_murder }
		has_opinion_modifier = { who = ROOT modifier = opinion_spouse_slayer }
		has_opinion_modifier = { who = ROOT modifier = opinion_murder_attempt }
		has_opinion_modifier = { who = ROOT modifier = opinion_killed_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_killed_father }
		has_opinion_modifier = { who = ROOT modifier = opinion_hajj_attempt_murder }
		has_opinion_modifier = { who = ROOT modifier = opinion_fatwa_target }
		has_opinion_modifier = { who = ROOT modifier = opinion_refused_order }
		has_opinion_modifier = { who = ROOT modifier = opinion_castrated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_blinded_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_castrated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_castrated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_blinded_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_blinded_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_witch }
		has_opinion_modifier = { who = ROOT modifier = opinion_takfir }
		has_opinion_modifier = { who = ROOT modifier = opinion_attempted_abduction }
		has_opinion_modifier = { who = ROOT modifier = opinion_killed_lover }
		has_opinion_modifier = { who = ROOT modifier = opinion_unfaithful_wife }
		has_opinion_modifier = { who = ROOT modifier = opinion_unfaithful_husband_crime }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_heresiarch }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_infidel }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_deviant }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_illegitimate }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_cultist }
		has_opinion_modifier = { who = ROOT modifier = opinion_cuckolded }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_dw }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_traitor }
		has_opinion_modifier = { who = ROOT modifier = opinion_charge_slanderer }
		has_opinion_modifier = { who = ROOT modifier = abuse_of_office }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_tortured_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_me }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_family }
		has_opinion_modifier = { who = ROOT modifier = opinion_mutilated_close_kin }
		has_opinion_modifier = { who = ROOT modifier = opinion_thief }
		has_opinion_modifier = { who = ROOT modifier = opinion_outlawed_society }
		has_opinion_modifier = { who = ROOT modifier = opinion_accused_apostate }
	}
}

is_single_player_observer_mode = {
	AND = {
		multiplayer = no
		is_local_human_observer = yes
	}
}

# For checking the Chinese Emperor's likes & dislikes
# is_liked_by_EK_trigger = {
# 	liked_by_offmap = {
#         type = offmap_ek
#     }
#     NOT = {
#         disliked_by_offmap = {
#             type = offmap_ek
#         }
#     }
#     offmap_ek = {
#         show_scope_change = no
#         custom_tooltip = { text = emperor_likes_THIS_tt }
#     }
# }

#Sex restrictions on Great Tribal Festival activities.
can_enter_festival_physical_competitions_trigger = {
	is_adult = yes
# 	OR = {
# 		AND = {
# 			is_female = no
# 			OR = {
# 				NOT = { has_religion_feature = religion_matriarchal }
# 				is_member_of_any_warrior_lodge_trigger = yes
# 				has_character_flag = special_marshal
# 			}
# 		}
# 		AND = {
# 			is_female = yes
# 			OR = {
# 				trait = shieldmaiden
# 				has_religion_feature = religion_matriarchal
# 				has_character_flag = special_marshal
# 				is_member_of_any_warrior_lodge_trigger = yes
# 			}
# 		}
# 	}
}

proselytize_convert_independent_trigger = {
	owner = {
		OR = { 
			#FROM = { NOT = { religion_group = pagan_group } } TODO we can add religions meant to proselytize here
			FROM = { has_religion_feature = religion_proselytizing }
		}
		independent = yes
		NOT = { religion = FROM }
		is_reformed_religion = no
		capital_scope = {
			province = ROOT
		}
		controls_religion = no
		FROM = {
			higher_tier_than = COUNT
			OR = {
				independent = yes
				higher_tier_than = DUKE
			}
		}
		NOT = {
			has_opinion_modifier = { who = FROM modifier = opinion_sent_preacher }
		}
		is_within_diplo_range = FROM
	}
}
